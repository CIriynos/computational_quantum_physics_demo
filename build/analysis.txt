Flat profile:

Each sample counts as 0.01 seconds.
 no time accumulated

  %   cumulative   self              self     total           
 time   seconds   seconds    calls  Ts/call  Ts/call  name    
  0.00      0.00     0.00  2565028     0.00     0.00  Eigen::EigenBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::derived() const
  0.00      0.00     0.00  1536000     0.00     0.00  __gnu_cxx::new_allocator<int>::~new_allocator()
  0.00      0.00     0.00  1536000     0.00     0.00  std::allocator<int>::~allocator()
  0.00      0.00     0.00  1536000     0.00     0.00  std::vector<int, std::allocator<int> >::operator[](unsigned long)
  0.00      0.00     0.00  1028516     0.00     0.00  Eigen::DenseStorage<std::complex<double>, -1, -1, 1, 0>::rows() const
  0.00      0.00     0.00  1028516     0.00     0.00  Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::rows() const
  0.00      0.00     0.00  1027515     0.00     0.00  Eigen::DenseStorage<std::complex<double>, -1, -1, 1, 0>::cols()
  0.00      0.00     0.00  1027515     0.00     0.00  Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::cols() const
  0.00      0.00     0.00  1026514     0.00     0.00  Eigen::EigenBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::cols() const
  0.00      0.00     0.00  1026514     0.00     0.00  Eigen::EigenBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::rows() const
  0.00      0.00     0.00  1026514     0.00     0.00  Eigen::EigenBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::size() const
  0.00      0.00     0.00  1024000     0.00     0.00  __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
  0.00      0.00     0.00  1024000     0.00     0.00  __gnu_cxx::new_allocator<int>::_M_max_size() const
  0.00      0.00     0.00  1024000     0.00     0.00  std::allocator<int>::allocator(std::allocator<int> const&)
  0.00      0.00     0.00  1024000     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
  0.00      0.00     0.00   774262     0.00     0.00  CQP::NumericalGrid<1u, 1u>::getTotalCount() const
  0.00      0.00     0.00   768256     0.00     0.00  Eigen::internal::evaluator_base<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::evaluator_base()
  0.00      0.00     0.00   768256     0.00     0.00  Eigen::internal::evaluator_base<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::~evaluator_base()
  0.00      0.00     0.00   768256     0.00     0.00  void Eigen::internal::ignore_unused_variable<long>(long const&)
  0.00      0.00     0.00   768256     0.00     0.00  Eigen::internal::plainobjectbase_evaluator_data<std::complex<double>, 0>::plainobjectbase_evaluator_data(std::complex<double> const*, long)
  0.00      0.00     0.00   768256     0.00     0.00  Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >::evaluator(Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&)
  0.00      0.00     0.00   768256     0.00     0.00  Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >::~evaluator()
  0.00      0.00     0.00   768256     0.00     0.00  Eigen::internal::evaluator<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::evaluator(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> const&)
  0.00      0.00     0.00   768256     0.00     0.00  Eigen::internal::evaluator<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::~evaluator()
  0.00      0.00     0.00   768256     0.00     0.00  Eigen::DenseStorage<std::complex<double>, -1, -1, 1, 0>::data() const
  0.00      0.00     0.00   768256     0.00     0.00  Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::data() const
  0.00      0.00     0.00   768000     0.00     0.00  CQP::NumericalGrid<1u, 1u>::shrink(int (&) [1]) const
  0.00      0.00     0.00   514001     0.00     0.00  unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&)
  0.00      0.00     0.00   512259     0.00     0.00  operator new(unsigned long, void*)
  0.00      0.00     0.00   512256     0.00     0.00  void std::_Construct<std::complex<double>, std::complex<double> const&>(std::complex<double>*, std::complex<double> const&)
  0.00      0.00     0.00   512256     0.00     0.00  std::complex<double>* std::__addressof<std::complex<double> >(std::complex<double>&)
  0.00      0.00     0.00   512256     0.00     0.00  std::complex<double> const& std::forward<std::complex<double> const&>(std::remove_reference<std::complex<double> const&>::type&)
  0.00      0.00     0.00   512000     0.00     0.00  __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
  0.00      0.00     0.00   512000     0.00     0.00  __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
  0.00      0.00     0.00   512000     0.00     0.00  __gnu_cxx::new_allocator<int>::new_allocator()
  0.00      0.00     0.00   512000     0.00     0.00  CQP::Wavefunction<1u>::getValueByIndex(int) const
  0.00      0.00     0.00   512000     0.00     0.00  CQP::NumericalGrid<1u, 1u>::expand(int) const
  0.00      0.00     0.00   512000     0.00     0.00  Eigen::DenseCoeffsBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, 0>::coeff(long) const
  0.00      0.00     0.00   512000     0.00     0.00  Eigen::DenseCoeffsBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, 0>::operator()(long) const
  0.00      0.00     0.00   512000     0.00     0.00  Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >::coeff(long) const
  0.00      0.00     0.00   512000     0.00     0.00  __gnu_cxx::new_allocator<int>::max_size() const
  0.00      0.00     0.00   512000     0.00     0.00  std::allocator<int>::allocator()
  0.00      0.00     0.00   512000     0.00     0.00  void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
  0.00      0.00     0.00   512000     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
  0.00      0.00     0.00   512000     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
  0.00      0.00     0.00   512000     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
  0.00      0.00     0.00   512000     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
  0.00      0.00     0.00   512000     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
  0.00      0.00     0.00   512000     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data()
  0.00      0.00     0.00   512000     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
  0.00      0.00     0.00   512000     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
  0.00      0.00     0.00   512000     0.00     0.00  std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long)
  0.00      0.00     0.00   512000     0.00     0.00  std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long)
  0.00      0.00     0.00   512000     0.00     0.00  std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
  0.00      0.00     0.00   512000     0.00     0.00  int* std::__uninitialized_fill_n<true>::__uninit_fill_n<int*, unsigned long, int>(int*, unsigned long, int const&)
  0.00      0.00     0.00   512000     0.00     0.00  std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&)
  0.00      0.00     0.00   512000     0.00     0.00  std::vector<int, std::allocator<int> >::_S_check_init_len(unsigned long, std::allocator<int> const&)
  0.00      0.00     0.00   512000     0.00     0.00  std::vector<int, std::allocator<int> >::_M_fill_initialize(unsigned long, int const&)
  0.00      0.00     0.00   512000     0.00     0.00  std::vector<int, std::allocator<int> >::vector(unsigned long, int const&, std::allocator<int> const&)
  0.00      0.00     0.00   512000     0.00     0.00  std::vector<int, std::allocator<int> >::~vector()
  0.00      0.00     0.00   512000     0.00     0.00  int* std::__fill_n_a<int*, unsigned long, int>(int*, unsigned long, int const&, std::random_access_iterator_tag)
  0.00      0.00     0.00   512000     0.00     0.00  std::__size_to_integer(unsigned long)
  0.00      0.00     0.00   512000     0.00     0.00  std::iterator_traits<int*>::iterator_category std::__iterator_category<int*>(int* const&)
  0.00      0.00     0.00   512000     0.00     0.00  int* std::uninitialized_fill_n<int*, unsigned long, int>(int*, unsigned long, int const&)
  0.00      0.00     0.00   512000     0.00     0.00  int* std::__uninitialized_fill_n_a<int*, unsigned long, int, int>(int*, unsigned long, int const&, std::allocator<int>&)
  0.00      0.00     0.00   512000     0.00     0.00  int* std::fill_n<int*, unsigned long, int>(int*, unsigned long, int const&)
  0.00      0.00     0.00   512000     0.00     0.00  void std::_Destroy<int*>(int*, int*)
  0.00      0.00     0.00   512000     0.00     0.00  void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
  0.00      0.00     0.00   512000     0.00     0.00  void std::__fill_a<int*, int>(int*, int*, int const&)
  0.00      0.00     0.00   512000     0.00     0.00  __gnu_cxx::__enable_if<std::__is_scalar<int>::__value, void>::__type std::__fill_a1<int*, int>(int*, int*, int const&)
  0.00      0.00     0.00   259258     0.00     0.00  std::complex<double>::complex(double, double)
  0.00      0.00     0.00   258258     0.00     0.00  Eigen::EigenBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::derived()
  0.00      0.00     0.00   256256     0.00     0.00  Eigen::DenseCoeffsBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, 1>::coeffRef(long)
  0.00      0.00     0.00   256256     0.00     0.00  Eigen::DenseCoeffsBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, 1>::operator()(long)
  0.00      0.00     0.00   256256     0.00     0.00  Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >::coeffRef(long)
  0.00      0.00     0.00   256256     0.00     0.00  std::vector<std::complex<double>, std::allocator<std::complex<double> > >::operator[](unsigned long) const
  0.00      0.00     0.00   256256     0.00     0.00  std::vector<std::complex<double>, std::allocator<std::complex<double> > >::operator[](unsigned long)
  0.00      0.00     0.00   256000     0.00     0.00  std::complex<double>::imag[abi:cxx11]() const
  0.00      0.00     0.00   256000     0.00     0.00  std::complex<double>::real[abi:cxx11]() const
  0.00      0.00     0.00   256000     0.00     0.00  std::complex<double>::operator/=(double)
  0.00      0.00     0.00   256000     0.00     0.00  std::complex<double> std::operator/<double>(std::complex<double> const&, double const&)
  0.00      0.00     0.00     6003     0.00     0.00  __gnu_cxx::new_allocator<std::complex<double> >::~new_allocator()
  0.00      0.00     0.00     6003     0.00     0.00  std::allocator<std::complex<double> >::~allocator()
  0.00      0.00     0.00     4002     0.00     0.00  __gnu_cxx::new_allocator<std::complex<double> >::new_allocator(__gnu_cxx::new_allocator<std::complex<double> > const&)
  0.00      0.00     0.00     4002     0.00     0.00  __gnu_cxx::new_allocator<std::complex<double> >::_M_max_size() const
  0.00      0.00     0.00     4002     0.00     0.00  std::allocator<std::complex<double> >::allocator(std::allocator<std::complex<double> > const&)
  0.00      0.00     0.00     4002     0.00     0.00  std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_M_get_Tp_allocator()
  0.00      0.00     0.00     2002     0.00     0.00  Eigen::internal::aligned_free(void*)
  0.00      0.00     0.00     2002     0.00     0.00  void Eigen::internal::conditional_aligned_free<true>(void*)
  0.00      0.00     0.00     2002     0.00     0.00  void Eigen::internal::conditional_aligned_delete_auto<std::complex<double>, true>(std::complex<double>*, unsigned long)
  0.00      0.00     0.00     2001     0.00     0.00  __gnu_cxx::new_allocator<std::complex<double> >::deallocate(std::complex<double>*, unsigned long)
  0.00      0.00     0.00     2001     0.00     0.00  __gnu_cxx::new_allocator<std::complex<double> >::allocate(unsigned long, void const*)
  0.00      0.00     0.00     2001     0.00     0.00  __gnu_cxx::new_allocator<std::complex<double> >::new_allocator()
  0.00      0.00     0.00     2001     0.00     0.00  __gnu_cxx::new_allocator<std::complex<double> >::max_size() const
  0.00      0.00     0.00     2001     0.00     0.00  std::allocator<std::complex<double> >::allocator()
  0.00      0.00     0.00     2001     0.00     0.00  void std::_Destroy_aux<true>::__destroy<std::complex<double>*>(std::complex<double>*, std::complex<double>*)
  0.00      0.00     0.00     2001     0.00     0.00  std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_M_allocate(unsigned long)
  0.00      0.00     0.00     2001     0.00     0.00  std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_Vector_impl::_Vector_impl(std::allocator<std::complex<double> > const&)
  0.00      0.00     0.00     2001     0.00     0.00  std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_Vector_impl::~_Vector_impl()
  0.00      0.00     0.00     2001     0.00     0.00  std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_M_deallocate(std::complex<double>*, unsigned long)
  0.00      0.00     0.00     2001     0.00     0.00  std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_M_create_storage(unsigned long)
  0.00      0.00     0.00     2001     0.00     0.00  std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_Vector_impl_data::_Vector_impl_data()
  0.00      0.00     0.00     2001     0.00     0.00  std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_Vector_base(unsigned long, std::allocator<std::complex<double> > const&)
  0.00      0.00     0.00     2001     0.00     0.00  std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::~_Vector_base()
  0.00      0.00     0.00     2001     0.00     0.00  std::allocator_traits<std::allocator<std::complex<double> > >::deallocate(std::allocator<std::complex<double> >&, std::complex<double>*, unsigned long)
  0.00      0.00     0.00     2001     0.00     0.00  std::allocator_traits<std::allocator<std::complex<double> > >::allocate(std::allocator<std::complex<double> >&, unsigned long)
  0.00      0.00     0.00     2001     0.00     0.00  std::allocator_traits<std::allocator<std::complex<double> > >::max_size(std::allocator<std::complex<double> > const&)
  0.00      0.00     0.00     2001     0.00     0.00  std::complex<double>* std::__uninitialized_fill_n<false>::__uninit_fill_n<std::complex<double>*, unsigned long, std::complex<double> >(std::complex<double>*, unsigned long, std::complex<double> const&)
  0.00      0.00     0.00     2001     0.00     0.00  std::vector<std::complex<double>, std::allocator<std::complex<double> > >::_S_max_size(std::allocator<std::complex<double> > const&)
  0.00      0.00     0.00     2001     0.00     0.00  std::vector<std::complex<double>, std::allocator<std::complex<double> > >::_S_check_init_len(unsigned long, std::allocator<std::complex<double> > const&)
  0.00      0.00     0.00     2001     0.00     0.00  std::vector<std::complex<double>, std::allocator<std::complex<double> > >::_M_fill_initialize(unsigned long, std::complex<double> const&)
  0.00      0.00     0.00     2001     0.00     0.00  std::vector<std::complex<double>, std::allocator<std::complex<double> > >::vector(unsigned long, std::complex<double> const&, std::allocator<std::complex<double> > const&)
  0.00      0.00     0.00     2001     0.00     0.00  std::vector<std::complex<double>, std::allocator<std::complex<double> > >::~vector()
  0.00      0.00     0.00     2001     0.00     0.00  std::complex<double>* std::uninitialized_fill_n<std::complex<double>*, unsigned long, std::complex<double> >(std::complex<double>*, unsigned long, std::complex<double> const&)
  0.00      0.00     0.00     2001     0.00     0.00  std::complex<double>* std::__uninitialized_fill_n_a<std::complex<double>*, unsigned long, std::complex<double>, std::complex<double> >(std::complex<double>*, unsigned long, std::complex<double> const&, std::allocator<std::complex<double> >&)
  0.00      0.00     0.00     2001     0.00     0.00  void std::_Destroy<std::complex<double>*>(std::complex<double>*, std::complex<double>*)
  0.00      0.00     0.00     2001     0.00     0.00  void std::_Destroy<std::complex<double>*, std::complex<double> >(std::complex<double>*, std::complex<double>*, std::allocator<std::complex<double> >&)
  0.00      0.00     0.00     2000     0.00     0.00  bool (anonymous namespace)::isApproxEqual<double>(double const&, double const&)
  0.00      0.00     0.00     1024     0.00     0.00  double&& std::forward<double>(std::remove_reference<double>::type&)
  0.00      0.00     0.00     1006     0.00     0.00  CQP::NumericalGrid<1u, 1u>::update_total_cnt()
  0.00      0.00     0.00     1002     0.00     0.00  CQP::NumericalGrid<1u, 1u>::NumericalGrid(CQP::NumericalGrid<1u, 1u> const&)
  0.00      0.00     0.00     1001     0.00     0.00  CQP::Wavefunction<1u>::Wavefunction(CQP::NumericalGrid<1u, 1u> const&, std::vector<std::complex<double>, std::allocator<std::complex<double> > > const&)
  0.00      0.00     0.00     1001     0.00     0.00  CQP::Wavefunction<1u>::~Wavefunction()
  0.00      0.00     0.00     1001     0.00     0.00  Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >::MatrixBase()
  0.00      0.00     0.00     1001     0.00     0.00  Eigen::MatrixBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::MatrixBase()
  0.00      0.00     0.00     1001     0.00     0.00  Eigen::DenseStorage<std::complex<double>, -1, -1, 1, 0>::data()
  0.00      0.00     0.00     1001     0.00     0.00  Eigen::DenseStorage<std::complex<double>, -1, -1, 1, 0>::resize(long, long, long)
  0.00      0.00     0.00     1001     0.00     0.00  Eigen::DenseStorage<std::complex<double>, -1, -1, 1, 0>::DenseStorage()
  0.00      0.00     0.00     1001     0.00     0.00  Eigen::DenseStorage<std::complex<double>, -1, -1, 1, 0>::~DenseStorage()
  0.00      0.00     0.00     1001     0.00     0.00  Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::CwiseNullaryOp(long, long, Eigen::internal::scalar_constant_op<std::complex<double> > const&)
  0.00      0.00     0.00     1001     0.00     0.00  Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>& Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::_set_noalias<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >(Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > > const&)
  0.00      0.00     0.00     1001     0.00     0.00  Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::_check_template_params()
  0.00      0.00     0.00     1001     0.00     0.00  Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::data()
  0.00      0.00     0.00     1001     0.00     0.00  void Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::_init1<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >(Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > > const&)
  0.00      0.00     0.00     1001     0.00     0.00  Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::resize(long, long)
  0.00      0.00     0.00     1001     0.00     0.00  Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::PlainObjectBase()
  0.00      0.00     0.00     1001     0.00     0.00  Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::~PlainObjectBase()
  0.00      0.00     0.00     1001     0.00     0.00  Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::Matrix<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >(Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&)
  0.00      0.00     0.00     1001     0.00     0.00  Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::~Matrix()
  0.00      0.00     0.00     1001     0.00     0.00  Eigen::internal::Assignment<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >, Eigen::internal::assign_op<std::complex<double>, std::complex<double> >, Eigen::internal::Dense2Dense, void>::run(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&, Eigen::internal::assign_op<std::complex<double>, std::complex<double> > const&)
  0.00      0.00     0.00     1001     0.00     0.00  Eigen::internal::aligned_malloc(unsigned long)
  0.00      0.00     0.00     1001     0.00     0.00  void Eigen::internal::resize_if_allowed<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >, std::complex<double>, std::complex<double> >(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&, Eigen::internal::assign_op<std::complex<double>, std::complex<double> > const&)
  0.00      0.00     0.00     1001     0.00     0.00  void Eigen::internal::check_for_aliasing<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> const&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&)
  0.00      0.00     0.00     1001     0.00     0.00  Eigen::internal::scalar_constant_op<std::complex<double> >::scalar_constant_op(Eigen::internal::scalar_constant_op<std::complex<double> > const&)
  0.00      0.00     0.00     1001     0.00     0.00  Eigen::internal::scalar_constant_op<std::complex<double> >::scalar_constant_op(std::complex<double> const&)
  0.00      0.00     0.00     1001     0.00     0.00  Eigen::internal::variable_if_dynamic<long, 1>::value()
  0.00      0.00     0.00     1001     0.00     0.00  Eigen::internal::variable_if_dynamic<long, 1>::variable_if_dynamic(long)
  0.00      0.00     0.00     1001     0.00     0.00  Eigen::internal::variable_if_dynamic<long, -1>::variable_if_dynamic(long)
  0.00      0.00     0.00     1001     0.00     0.00  void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >, Eigen::internal::assign_op<std::complex<double>, std::complex<double> > >(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&, Eigen::internal::assign_op<std::complex<double>, std::complex<double> > const&)
  0.00      0.00     0.00     1001     0.00     0.00  void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::Scalar>, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&, Eigen::internal::assign_op<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::Scalar, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::Scalar> const&)
  0.00      0.00     0.00     1001     0.00     0.00  void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)
  0.00      0.00     0.00     1001     0.00     0.00  Eigen::internal::check_that_malloc_is_allowed()
  0.00      0.00     0.00     1001     0.00     0.00  std::complex<double>* Eigen::internal::conditional_aligned_new_auto<std::complex<double>, true>(unsigned long)
  0.00      0.00     0.00     1001     0.00     0.00  Eigen::internal::assign_op<std::complex<double>, std::complex<double> >::assign_op()
  0.00      0.00     0.00     1001     0.00     0.00  Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >::DenseBase()
  0.00      0.00     0.00     1001     0.00     0.00  Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const Eigen::DenseBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::NullaryExpr<Eigen::internal::scalar_constant_op<std::complex<double> > >(long, Eigen::internal::scalar_constant_op<std::complex<double> > const&)
  0.00      0.00     0.00     1001     0.00     0.00  Eigen::DenseBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::Zero(long)
  0.00      0.00     0.00     1001     0.00     0.00  Eigen::DenseBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::Constant(long, std::complex<double> const&)
  0.00      0.00     0.00     1001     0.00     0.00  Eigen::DenseBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::DenseBase()
  0.00      0.00     0.00     1001     0.00     0.00  Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::cols() const
  0.00      0.00     0.00     1001     0.00     0.00  Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::rows() const
  0.00      0.00     0.00     1001     0.00     0.00  Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::functor() const
  0.00      0.00     0.00     1001     0.00     0.00  Eigen::internal::scalar_constant_op<std::complex<double> >::operator()() const
  0.00      0.00     0.00     1001     0.00     0.00  Eigen::internal::variable_if_dynamic<long, -1>::value() const
  0.00      0.00     0.00     1001     0.00     0.00  Eigen::EigenBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >::derived() const
  0.00      0.00     0.00     1001     0.00     0.00  std::vector<std::complex<double>, std::allocator<std::complex<double> > >::size() const
  0.00      0.00     0.00     1001     0.00     0.00  std::complex<double>* std::__fill_n_a<std::complex<double>*, long, std::complex<double> >(std::complex<double>*, long, std::complex<double> const&, std::random_access_iterator_tag)
  0.00      0.00     0.00     1001     0.00     0.00  std::__size_to_integer(long)
  0.00      0.00     0.00     1001     0.00     0.00  std::iterator_traits<std::complex<double>*>::iterator_category std::__iterator_category<std::complex<double>*>(std::complex<double>* const&)
  0.00      0.00     0.00     1001     0.00     0.00  std::complex<double>* std::fill_n<std::complex<double>*, long, std::complex<double> >(std::complex<double>*, long, std::complex<double> const&)
  0.00      0.00     0.00     1001     0.00     0.00  void std::__fill_a<std::complex<double>*, std::complex<double> >(std::complex<double>*, std::complex<double>*, std::complex<double> const&)
  0.00      0.00     0.00     1001     0.00     0.00  __gnu_cxx::__enable_if<!std::__is_scalar<std::complex<double> >::__value, void>::__type std::__fill_a1<std::complex<double>*, std::complex<double> >(std::complex<double>*, std::complex<double>*, std::complex<double> const&)
  0.00      0.00     0.00     1000     0.00     0.00  bool (anonymous namespace)::isApproxEqual<int>(int const&, int const&)
  0.00      0.00     0.00     1000     0.00     0.00  CQP::FFTExecutor<1u, 0u>::execute()
  0.00      0.00     0.00     1000     0.00     0.00  CQP::FFTExecutor<1u, 0u>::inputWave(CQP::Wavefunction<1u> const&)
  0.00      0.00     0.00     1000     0.00     0.00  CQP::operator==(CQP::NumericalGrid<1u, 1u> const&, CQP::NumericalGrid<1u, 1u> const&)
  0.00      0.00     0.00     1000     0.00     0.00  CQP::Wavefunction<1u>::getGrid() const
  0.00      0.00     0.00      512     0.00     0.00  test_omp()::{lambda(double)#1}& std::forward<test_omp()::{lambda(double)#1}&>(std::remove_reference<test_omp()::{lambda(double)#1}&>::type&)
  0.00      0.00     0.00      258     0.00     0.00  std::_Function_base::_M_empty() const
  0.00      0.00     0.00      258     0.00     0.00  std::_Any_data::_M_access() const
  0.00      0.00     0.00      258     0.00     0.00  test_omp()::{lambda(double)#1} const& std::_Any_data::_M_access<test_omp()::{lambda(double)#1}>() const
  0.00      0.00     0.00      258     0.00     0.00  std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_get_pointer(std::_Any_data const&)
  0.00      0.00     0.00      258     0.00     0.00  test_omp()::{lambda(double)#1} const* std::__addressof<test_omp()::{lambda(double)#1} const>(test_omp()::{lambda(double)#1} const&)
  0.00      0.00     0.00      256     0.00     0.00  CQP::GridPoint<1u>::x()
  0.00      0.00     0.00      256     0.00     0.00  CQP::GridPoint<1u>::get(int)
  0.00      0.00     0.00      256     0.00     0.00  CQP::GridPoint<1u>::GridPoint()
  0.00      0.00     0.00      256     0.00     0.00  CQP::NumericalGrid<1u, 1u>::index_agent(int) const
  0.00      0.00     0.00      256     0.00     0.00  CQP::NumericalGrid<1u, 1u>::get_value_by_index(int, int) const
  0.00      0.00     0.00      256     0.00     0.00  CQP::NumericalGrid<1u, 1u>::index(int) const
  0.00      0.00     0.00      256     0.00     0.00  std::function<std::complex<double> (double)>::operator()(double) const
  0.00      0.00     0.00      256     0.00     0.00  std::_Function_handler<std::complex<double> (double), test_omp()::{lambda(double)#1}>::_M_invoke(std::_Any_data const&, double&&)
  0.00      0.00     0.00      256     0.00     0.00  std::enable_if<is_invocable_r_v<std::complex<double>, test_omp()::{lambda(double)#1}&, double>, std::enable_if>::type std::__invoke_r<std::complex<double>, test_omp()::{lambda(double)#1}&, double>(std::complex<double>&&, (test_omp()::{lambda(double)#1}&)...)
  0.00      0.00     0.00      256     0.00     0.00  double std::__invoke_impl<double, test_omp()::{lambda(double)#1}&, double>(std::__invoke_other, test_omp()::{lambda(double)#1}&, double&&)
  0.00      0.00     0.00      256     0.00     0.00  test_omp()::{lambda(double)#1}::operator()(double) const
  0.00      0.00     0.00        6     0.00     0.00  std::_Any_data::_M_access()
  0.00      0.00     0.00        5     0.00     0.00  std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}> const&, std::_Manager_operation)
  0.00      0.00     0.00        5     0.00     0.00  std::_Function_handler<std::complex<double> (double), test_omp()::{lambda(double)#1}>::_M_manager(std::_Any_data&, std::_Function_handler<std::complex<double> (double), test_omp()::{lambda(double)#1}> const&, std::_Manager_operation)
  0.00      0.00     0.00        4     0.00     0.00  test_omp()::{lambda(double)#1} const& std::forward<test_omp()::{lambda(double)#1} const&>(std::remove_reference<test_omp()::{lambda(double)#1} const&>::type&)
  0.00      0.00     0.00        3     0.00     0.00  CQP::NumericalGrid<1u, 1u>::getCount(int) const
  0.00      0.00     0.00        3     0.00     0.00  std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
  0.00      0.00     0.00        3     0.00     0.00  std::_Function_base::_Function_base()
  0.00      0.00     0.00        3     0.00     0.00  std::_Function_base::~_Function_base()
  0.00      0.00     0.00        3     0.00     0.00  std::function<std::complex<double> (double)>::~function()
  0.00      0.00     0.00        3     0.00     0.00  test_omp()::{lambda(double)#1}& std::_Any_data::_M_access<test_omp()::{lambda(double)#1}>()
  0.00      0.00     0.00        3     0.00     0.00  test_omp()::{lambda(double)#1}&& std::forward<test_omp()::{lambda(double)#1}>(std::remove_reference<test_omp()::{lambda(double)#1}>::type&)
  0.00      0.00     0.00        2     0.00     0.00  std::function<std::complex<double> (double)>::operator bool() const
  0.00      0.00     0.00        2     0.00     0.00  void std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_init_functor<{lambda(double)#1} const&>(std::_Any_data&, {lambda(double)#1} const&)
  0.00      0.00     0.00        2     0.00     0.00  void std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_create<{lambda(double)#1} const&>(std::_Any_data&, {lambda(double)#1} const&, std::integral_constant<bool, true>)
  0.00      0.00     0.00        2     0.00     0.00  std::function<std::complex<double> (double)>::function(std::function<std::complex<double> (double)> const&)
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z7test_1dv
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  test_omp()
  0.00      0.00     0.00        1     0.00     0.00  CQP::FFTExecutor<1u, 0u>::FFTExecutor(CQP::NumericalGrid<1u, 1u> const&)
  0.00      0.00     0.00        1     0.00     0.00  CQP::FFTExecutor<1u, 0u>::~FFTExecutor()
  0.00      0.00     0.00        1     0.00     0.00  CQP::NumericalGrid<1u, 1u>::init(int, double, double)
  0.00      0.00     0.00        1     0.00     0.00  CQP::NumericalGrid<1u, 1u>::NumericalGrid(int (&) [1], double (&) [1], double (&) [1])
  0.00      0.00     0.00        1     0.00     0.00  CQP::NumericalGrid<1u, 1u>::NumericalGrid()
  0.00      0.00     0.00        1     0.00     0.00  CQP::NumericalGrid<1u, 1u>::NumericalGrid<int, int, int>(int, int, int)
  0.00      0.00     0.00        1     0.00     0.00  CQP::NumericalGrid<1u, 1u>::operator=(CQP::NumericalGrid<1u, 1u> const&)
  0.00      0.00     0.00        1     0.00     0.00  CQP::Wavefunction<1u> CQP::createWaveByExpression<1u, std::function<std::complex<double> (double)> >(CQP::NumericalGrid<1u, 1u> const&, std::function<std::complex<double> (double)>)
  0.00      0.00     0.00        1     0.00     0.00  CQP::create1DWaveByExpression(CQP::NumericalGrid<1u, 1u> const&, std::function<std::complex<double> (double)>)
  0.00      0.00     0.00        1     0.00     0.00  Eigen::internal::all_t::all_t()
  0.00      0.00     0.00        1     0.00     0.00  Eigen::internal::FixedInt<1>::FixedInt()
  0.00      0.00     0.00        1     0.00     0.00  Eigen::symbolic::SymbolExpr<Eigen::internal::symbolic_last_tag>::SymbolExpr()
  0.00      0.00     0.00        1     0.00     0.00  Eigen::symbolic::AddExpr<Eigen::symbolic::SymbolExpr<Eigen::internal::symbolic_last_tag>, Eigen::symbolic::ValueExpr<Eigen::internal::FixedInt<1> > >::AddExpr(Eigen::symbolic::SymbolExpr<Eigen::internal::symbolic_last_tag> const&, Eigen::symbolic::ValueExpr<Eigen::internal::FixedInt<1> > const&)
  0.00      0.00     0.00        1     0.00     0.00  Eigen::symbolic::ValueExpr<Eigen::internal::FixedInt<1> >::ValueExpr()
  0.00      0.00     0.00        1     0.00     0.00  CQP::NumericalGrid<1u, 1u>::getLength(int) const
  0.00      0.00     0.00        1     0.00     0.00  CQP::NumericalGrid<1u, 1u>::getOffset(int) const
  0.00      0.00     0.00        1     0.00     0.00  Eigen::internal::FixedInt<1>::operator()() const
  0.00      0.00     0.00        1     0.00     0.00  Eigen::symbolic::BaseExpr<Eigen::symbolic::SymbolExpr<Eigen::internal::symbolic_last_tag> >::derived() const
  0.00      0.00     0.00        1     0.00     0.00  Eigen::symbolic::AddExpr<Eigen::symbolic::SymbolExpr<Eigen::internal::symbolic_last_tag>, Eigen::symbolic::ValueExpr<Eigen::internal::FixedInt<1> > > Eigen::symbolic::BaseExpr<Eigen::symbolic::SymbolExpr<Eigen::internal::symbolic_last_tag> >::operator+<1>(Eigen::internal::FixedInt<1>) const
  0.00      0.00     0.00        1     0.00     0.00  void std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_init_functor<{lambda(double)#1}>(std::_Any_data&, {lambda(double)#1}&&)
  0.00      0.00     0.00        1     0.00     0.00  bool std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_not_empty_function<{lambda(double)#1}>({lambda(double)#1} const&)
  0.00      0.00     0.00        1     0.00     0.00  void std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_create<{lambda(double)#1}>(std::_Any_data&, {lambda(double)#1}&&, std::integral_constant<bool, true>)
  0.00      0.00     0.00        1     0.00     0.00  std::function<std::complex<double> (double)>::function<test_omp()::{lambda(double)#1}, void>(test_omp()::{lambda(double)#1}&&)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2016 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) no time propagated

index % time    self  children    called     name
                0.00    0.00  512000/2565028     Eigen::DenseCoeffsBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, 0>::coeff(long) const [1108]
                0.00    0.00 1026514/2565028     Eigen::EigenBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::rows() const [1080]
                0.00    0.00 1026514/2565028     Eigen::EigenBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::cols() const [1079]
[1071]   0.0    0.00    0.00 2565028         Eigen::EigenBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::derived() const [1071]
-----------------------------------------------
                0.00    0.00 1536000/1536000     std::allocator<int>::~allocator() [1073]
[1072]   0.0    0.00    0.00 1536000         __gnu_cxx::new_allocator<int>::~new_allocator() [1072]
-----------------------------------------------
                0.00    0.00  512000/1536000     std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [1116]
                0.00    0.00  512000/1536000     CQP::NumericalGrid<1u, 1u>::expand(int) const [1107]
                0.00    0.00  512000/1536000     std::vector<int, std::allocator<int> >::_S_check_init_len(unsigned long, std::allocator<int> const&) [1127]
[1073]   0.0    0.00    0.00 1536000         std::allocator<int>::~allocator() [1073]
                0.00    0.00 1536000/1536000     __gnu_cxx::new_allocator<int>::~new_allocator() [1072]
-----------------------------------------------
                0.00    0.00  512000/1536000     CQP::FFTExecutor<1u, 0u>::inputWave(CQP::Wavefunction<1u> const&) [1245]
                0.00    0.00  512000/1536000     CQP::FFTExecutor<1u, 0u>::execute() [1244]
                0.00    0.00  512000/1536000     CQP::NumericalGrid<1u, 1u>::expand(int) const [1107]
[1074]   0.0    0.00    0.00 1536000         std::vector<int, std::allocator<int> >::operator[](unsigned long) [1074]
-----------------------------------------------
                0.00    0.00 1028516/1028516     Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::rows() const [1076]
[1075]   0.0    0.00    0.00 1028516         Eigen::DenseStorage<std::complex<double>, -1, -1, 1, 0>::rows() const [1075]
-----------------------------------------------
                0.00    0.00    2002/1028516     void Eigen::internal::resize_if_allowed<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >, std::complex<double>, std::complex<double> >(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&, Eigen::internal::assign_op<std::complex<double>, std::complex<double> > const&) [1212]
                0.00    0.00 1026514/1028516     Eigen::EigenBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::rows() const [1080]
[1076]   0.0    0.00    0.00 1028516         Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::rows() const [1076]
                0.00    0.00 1028516/1028516     Eigen::DenseStorage<std::complex<double>, -1, -1, 1, 0>::rows() const [1075]
-----------------------------------------------
                0.00    0.00 1027515/1027515     Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::cols() const [1078]
[1077]   0.0    0.00    0.00 1027515         Eigen::DenseStorage<std::complex<double>, -1, -1, 1, 0>::cols() [1077]
-----------------------------------------------
                0.00    0.00    1001/1027515     void Eigen::internal::resize_if_allowed<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >, std::complex<double>, std::complex<double> >(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&, Eigen::internal::assign_op<std::complex<double>, std::complex<double> > const&) [1212]
                0.00    0.00 1026514/1027515     Eigen::EigenBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::cols() const [1079]
[1078]   0.0    0.00    0.00 1027515         Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::cols() const [1078]
                0.00    0.00 1027515/1027515     Eigen::DenseStorage<std::complex<double>, -1, -1, 1, 0>::cols() [1077]
-----------------------------------------------
                0.00    0.00 1026514/1026514     Eigen::EigenBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::size() const [1081]
[1079]   0.0    0.00    0.00 1026514         Eigen::EigenBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::cols() const [1079]
                0.00    0.00 1026514/2565028     Eigen::EigenBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::derived() const [1071]
                0.00    0.00 1026514/1027515     Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::cols() const [1078]
-----------------------------------------------
                0.00    0.00 1026514/1026514     Eigen::EigenBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::size() const [1081]
[1080]   0.0    0.00    0.00 1026514         Eigen::EigenBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::rows() const [1080]
                0.00    0.00 1026514/2565028     Eigen::EigenBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::derived() const [1071]
                0.00    0.00 1026514/1028516     Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::rows() const [1076]
-----------------------------------------------
                0.00    0.00    1001/1026514     void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::Scalar>, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&, Eigen::internal::assign_op<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::Scalar, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::Scalar> const&) [1220]
                0.00    0.00  256256/1026514     Eigen::DenseCoeffsBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, 1>::operator()(long) [1144]
                0.00    0.00  257257/1026514     CQP::Wavefunction<1u>::Wavefunction(CQP::NumericalGrid<1u, 1u> const&, std::vector<std::complex<double>, std::allocator<std::complex<double> > > const&) [1192]
                0.00    0.00  512000/1026514     Eigen::DenseCoeffsBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, 0>::operator()(long) const [1109]
[1081]   0.0    0.00    0.00 1026514         Eigen::EigenBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::size() const [1081]
                0.00    0.00 1026514/1026514     Eigen::EigenBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::rows() const [1080]
                0.00    0.00 1026514/1026514     Eigen::EigenBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::cols() const [1079]
-----------------------------------------------
                0.00    0.00 1024000/1024000     std::allocator<int>::allocator(std::allocator<int> const&) [1084]
[1082]   0.0    0.00    0.00 1024000         __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&) [1082]
-----------------------------------------------
                0.00    0.00  512000/1024000     __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [1104]
                0.00    0.00  512000/1024000     __gnu_cxx::new_allocator<int>::max_size() const [1111]
[1083]   0.0    0.00    0.00 1024000         __gnu_cxx::new_allocator<int>::_M_max_size() const [1083]
-----------------------------------------------
                0.00    0.00  512000/1024000     std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&) [1115]
                0.00    0.00  512000/1024000     std::vector<int, std::allocator<int> >::_S_check_init_len(unsigned long, std::allocator<int> const&) [1127]
[1084]   0.0    0.00    0.00 1024000         std::allocator<int>::allocator(std::allocator<int> const&) [1084]
                0.00    0.00 1024000/1024000     __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&) [1082]
-----------------------------------------------
                0.00    0.00  512000/1024000     std::vector<int, std::allocator<int> >::~vector() [1130]
                0.00    0.00  512000/1024000     std::vector<int, std::allocator<int> >::_M_fill_initialize(unsigned long, int const&) [1128]
[1085]   0.0    0.00    0.00 1024000         std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [1085]
-----------------------------------------------
                0.00    0.00       2/774262      CQP::FFTExecutor<1u, 0u>::FFTExecutor(CQP::NumericalGrid<1u, 1u> const&) [1283]
                0.00    0.00     258/774262      CQP::create1DWaveByExpression(CQP::NumericalGrid<1u, 1u> const&, std::function<std::complex<double> (double)>) [1291]
                0.00    0.00    2002/774262      CQP::Wavefunction<1u>::Wavefunction(CQP::NumericalGrid<1u, 1u> const&, std::vector<std::complex<double>, std::allocator<std::complex<double> > > const&) [1192]
                0.00    0.00  258000/774262      CQP::FFTExecutor<1u, 0u>::inputWave(CQP::Wavefunction<1u> const&) [1245]
                0.00    0.00  514000/774262      CQP::FFTExecutor<1u, 0u>::execute() [1244]
[1086]   0.0    0.00    0.00  774262         CQP::NumericalGrid<1u, 1u>::getTotalCount() const [1086]
-----------------------------------------------
                0.00    0.00  768256/768256      Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >::evaluator(Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&) [1091]
[1087]   0.0    0.00    0.00  768256         Eigen::internal::evaluator_base<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::evaluator_base() [1087]
-----------------------------------------------
                0.00    0.00  768256/768256      Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >::~evaluator() [1092]
[1088]   0.0    0.00    0.00  768256         Eigen::internal::evaluator_base<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::~evaluator_base() [1088]
-----------------------------------------------
                0.00    0.00  768256/768256      Eigen::internal::plainobjectbase_evaluator_data<std::complex<double>, 0>::plainobjectbase_evaluator_data(std::complex<double> const*, long) [1090]
[1089]   0.0    0.00    0.00  768256         void Eigen::internal::ignore_unused_variable<long>(long const&) [1089]
-----------------------------------------------
                0.00    0.00  768256/768256      Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >::evaluator(Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&) [1091]
[1090]   0.0    0.00    0.00  768256         Eigen::internal::plainobjectbase_evaluator_data<std::complex<double>, 0>::plainobjectbase_evaluator_data(std::complex<double> const*, long) [1090]
                0.00    0.00  768256/768256      void Eigen::internal::ignore_unused_variable<long>(long const&) [1089]
-----------------------------------------------
                0.00    0.00  768256/768256      Eigen::internal::evaluator<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::evaluator(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> const&) [1093]
[1091]   0.0    0.00    0.00  768256         Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >::evaluator(Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&) [1091]
                0.00    0.00  768256/768256      Eigen::internal::evaluator_base<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::evaluator_base() [1087]
                0.00    0.00  768256/768256      Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::data() const [1096]
                0.00    0.00  768256/768256      Eigen::internal::plainobjectbase_evaluator_data<std::complex<double>, 0>::plainobjectbase_evaluator_data(std::complex<double> const*, long) [1090]
-----------------------------------------------
                0.00    0.00  768256/768256      Eigen::internal::evaluator<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::~evaluator() [1094]
[1092]   0.0    0.00    0.00  768256         Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >::~evaluator() [1092]
                0.00    0.00  768256/768256      Eigen::internal::evaluator_base<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::~evaluator_base() [1088]
-----------------------------------------------
                0.00    0.00  256256/768256      Eigen::DenseCoeffsBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, 1>::coeffRef(long) [1143]
                0.00    0.00  512000/768256      Eigen::DenseCoeffsBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, 0>::coeff(long) const [1108]
[1093]   0.0    0.00    0.00  768256         Eigen::internal::evaluator<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::evaluator(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> const&) [1093]
                0.00    0.00  768256/768256      Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >::evaluator(Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&) [1091]
-----------------------------------------------
                0.00    0.00  256256/768256      Eigen::DenseCoeffsBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, 1>::coeffRef(long) [1143]
                0.00    0.00  512000/768256      Eigen::DenseCoeffsBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, 0>::coeff(long) const [1108]
[1094]   0.0    0.00    0.00  768256         Eigen::internal::evaluator<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::~evaluator() [1094]
                0.00    0.00  768256/768256      Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >::~evaluator() [1092]
-----------------------------------------------
                0.00    0.00  768256/768256      Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::data() const [1096]
[1095]   0.0    0.00    0.00  768256         Eigen::DenseStorage<std::complex<double>, -1, -1, 1, 0>::data() const [1095]
-----------------------------------------------
                0.00    0.00  768256/768256      Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >::evaluator(Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&) [1091]
[1096]   0.0    0.00    0.00  768256         Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::data() const [1096]
                0.00    0.00  768256/768256      Eigen::DenseStorage<std::complex<double>, -1, -1, 1, 0>::data() const [1095]
-----------------------------------------------
                0.00    0.00  256000/768000      CQP::FFTExecutor<1u, 0u>::execute() [1244]
                0.00    0.00  512000/768000      CQP::FFTExecutor<1u, 0u>::inputWave(CQP::Wavefunction<1u> const&) [1245]
[1097]   0.0    0.00    0.00  768000         CQP::NumericalGrid<1u, 1u>::shrink(int (&) [1]) const [1097]
-----------------------------------------------
                0.00    0.00    2001/514001      std::vector<std::complex<double>, std::allocator<std::complex<double> > >::_S_max_size(std::allocator<std::complex<double> > const&) [1179]
                0.00    0.00  512000/514001      std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&) [1126]
[1098]   0.0    0.00    0.00  514001         unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&) [1098]
-----------------------------------------------
                0.00    0.00       1/512259      void std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_create<{lambda(double)#1}>(std::_Any_data&, {lambda(double)#1}&&, std::integral_constant<bool, true>) [1304]
                0.00    0.00       2/512259      void std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_create<{lambda(double)#1} const&>(std::_Any_data&, {lambda(double)#1} const&, std::integral_constant<bool, true>) [1278]
                0.00    0.00  512256/512259      void std::_Construct<std::complex<double>, std::complex<double> const&>(std::complex<double>*, std::complex<double> const&) [1100]
[1099]   0.0    0.00    0.00  512259         operator new(unsigned long, void*) [1099]
-----------------------------------------------
                0.00    0.00  512256/512256      std::complex<double>* std::__uninitialized_fill_n<false>::__uninit_fill_n<std::complex<double>*, unsigned long, std::complex<double> >(std::complex<double>*, unsigned long, std::complex<double> const&) [1178]
[1100]   0.0    0.00    0.00  512256         void std::_Construct<std::complex<double>, std::complex<double> const&>(std::complex<double>*, std::complex<double> const&) [1100]
                0.00    0.00  512256/512256      std::complex<double> const& std::forward<std::complex<double> const&>(std::remove_reference<std::complex<double> const&>::type&) [1102]
                0.00    0.00  512256/512259      operator new(unsigned long, void*) [1099]
-----------------------------------------------
                0.00    0.00  512256/512256      std::complex<double>* std::__uninitialized_fill_n<false>::__uninit_fill_n<std::complex<double>*, unsigned long, std::complex<double> >(std::complex<double>*, unsigned long, std::complex<double> const&) [1178]
[1101]   0.0    0.00    0.00  512256         std::complex<double>* std::__addressof<std::complex<double> >(std::complex<double>&) [1101]
-----------------------------------------------
                0.00    0.00  512256/512256      void std::_Construct<std::complex<double>, std::complex<double> const&>(std::complex<double>*, std::complex<double> const&) [1100]
[1102]   0.0    0.00    0.00  512256         std::complex<double> const& std::forward<std::complex<double> const&>(std::remove_reference<std::complex<double> const&>::type&) [1102]
-----------------------------------------------
                0.00    0.00  512000/512000      std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [1122]
[1103]   0.0    0.00    0.00  512000         __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [1103]
-----------------------------------------------
                0.00    0.00  512000/512000      std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [1123]
[1104]   0.0    0.00    0.00  512000         __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [1104]
                0.00    0.00  512000/1024000     __gnu_cxx::new_allocator<int>::_M_max_size() const [1083]
-----------------------------------------------
                0.00    0.00  512000/512000      std::allocator<int>::allocator() [1112]
[1105]   0.0    0.00    0.00  512000         __gnu_cxx::new_allocator<int>::new_allocator() [1105]
-----------------------------------------------
                0.00    0.00  512000/512000      CQP::FFTExecutor<1u, 0u>::inputWave(CQP::Wavefunction<1u> const&) [1245]
[1106]   0.0    0.00    0.00  512000         CQP::Wavefunction<1u>::getValueByIndex(int) const [1106]
                0.00    0.00  512000/512000      Eigen::DenseCoeffsBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, 0>::operator()(long) const [1109]
-----------------------------------------------
                0.00    0.00  256000/512000      CQP::FFTExecutor<1u, 0u>::inputWave(CQP::Wavefunction<1u> const&) [1245]
                0.00    0.00  256000/512000      CQP::FFTExecutor<1u, 0u>::execute() [1244]
[1107]   0.0    0.00    0.00  512000         CQP::NumericalGrid<1u, 1u>::expand(int) const [1107]
                0.00    0.00  512000/512000      std::allocator<int>::allocator() [1112]
                0.00    0.00  512000/512000      std::vector<int, std::allocator<int> >::vector(unsigned long, int const&, std::allocator<int> const&) [1129]
                0.00    0.00  512000/1536000     std::allocator<int>::~allocator() [1073]
                0.00    0.00  512000/1536000     std::vector<int, std::allocator<int> >::operator[](unsigned long) [1074]
-----------------------------------------------
                0.00    0.00  512000/512000      Eigen::DenseCoeffsBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, 0>::operator()(long) const [1109]
[1108]   0.0    0.00    0.00  512000         Eigen::DenseCoeffsBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, 0>::coeff(long) const [1108]
                0.00    0.00  512000/2565028     Eigen::EigenBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::derived() const [1071]
                0.00    0.00  512000/768256      Eigen::internal::evaluator<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::evaluator(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> const&) [1093]
                0.00    0.00  512000/512000      Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >::coeff(long) const [1110]
                0.00    0.00  512000/768256      Eigen::internal::evaluator<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::~evaluator() [1094]
-----------------------------------------------
                0.00    0.00  512000/512000      CQP::Wavefunction<1u>::getValueByIndex(int) const [1106]
[1109]   0.0    0.00    0.00  512000         Eigen::DenseCoeffsBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, 0>::operator()(long) const [1109]
                0.00    0.00  512000/1026514     Eigen::EigenBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::size() const [1081]
                0.00    0.00  512000/512000      Eigen::DenseCoeffsBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, 0>::coeff(long) const [1108]
-----------------------------------------------
                0.00    0.00  512000/512000      Eigen::DenseCoeffsBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, 0>::coeff(long) const [1108]
[1110]   0.0    0.00    0.00  512000         Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >::coeff(long) const [1110]
-----------------------------------------------
                0.00    0.00  512000/512000      std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [1124]
[1111]   0.0    0.00    0.00  512000         __gnu_cxx::new_allocator<int>::max_size() const [1111]
                0.00    0.00  512000/1024000     __gnu_cxx::new_allocator<int>::_M_max_size() const [1083]
-----------------------------------------------
                0.00    0.00  512000/512000      CQP::NumericalGrid<1u, 1u>::expand(int) const [1107]
[1112]   0.0    0.00    0.00  512000         std::allocator<int>::allocator() [1112]
                0.00    0.00  512000/512000      __gnu_cxx::new_allocator<int>::new_allocator() [1105]
-----------------------------------------------
                0.00    0.00  512000/512000      void std::_Destroy<int*>(int*, int*) [1137]
[1113]   0.0    0.00    0.00  512000         void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [1113]
-----------------------------------------------
                0.00    0.00  512000/512000      std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long) [1118]
[1114]   0.0    0.00    0.00  512000         std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [1114]
                0.00    0.00  512000/512000      std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [1123]
-----------------------------------------------
                0.00    0.00  512000/512000      std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&) [1120]
[1115]   0.0    0.00    0.00  512000         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&) [1115]
                0.00    0.00  512000/1024000     std::allocator<int>::allocator(std::allocator<int> const&) [1084]
                0.00    0.00  512000/512000      std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data() [1119]
-----------------------------------------------
                0.00    0.00  512000/512000      std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [1121]
[1116]   0.0    0.00    0.00  512000         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [1116]
                0.00    0.00  512000/1536000     std::allocator<int>::~allocator() [1073]
-----------------------------------------------
                0.00    0.00  512000/512000      std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [1121]
[1117]   0.0    0.00    0.00  512000         std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [1117]
                0.00    0.00  512000/512000      std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [1122]
-----------------------------------------------
                0.00    0.00  512000/512000      std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&) [1120]
[1118]   0.0    0.00    0.00  512000         std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long) [1118]
                0.00    0.00  512000/512000      std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [1114]
-----------------------------------------------
                0.00    0.00  512000/512000      std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&) [1115]
[1119]   0.0    0.00    0.00  512000         std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data() [1119]
-----------------------------------------------
                0.00    0.00  512000/512000      std::vector<int, std::allocator<int> >::vector(unsigned long, int const&, std::allocator<int> const&) [1129]
[1120]   0.0    0.00    0.00  512000         std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&) [1120]
                0.00    0.00  512000/512000      std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&) [1115]
                0.00    0.00  512000/512000      std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long) [1118]
-----------------------------------------------
                0.00    0.00  512000/512000      std::vector<int, std::allocator<int> >::~vector() [1130]
[1121]   0.0    0.00    0.00  512000         std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [1121]
                0.00    0.00  512000/512000      std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [1117]
                0.00    0.00  512000/512000      std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [1116]
-----------------------------------------------
                0.00    0.00  512000/512000      std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [1117]
[1122]   0.0    0.00    0.00  512000         std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [1122]
                0.00    0.00  512000/512000      __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [1103]
-----------------------------------------------
                0.00    0.00  512000/512000      std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [1114]
[1123]   0.0    0.00    0.00  512000         std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [1123]
                0.00    0.00  512000/512000      __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [1104]
-----------------------------------------------
                0.00    0.00  512000/512000      std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&) [1126]
[1124]   0.0    0.00    0.00  512000         std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [1124]
                0.00    0.00  512000/512000      __gnu_cxx::new_allocator<int>::max_size() const [1111]
-----------------------------------------------
                0.00    0.00  512000/512000      int* std::uninitialized_fill_n<int*, unsigned long, int>(int*, unsigned long, int const&) [1134]
[1125]   0.0    0.00    0.00  512000         int* std::__uninitialized_fill_n<true>::__uninit_fill_n<int*, unsigned long, int>(int*, unsigned long, int const&) [1125]
                0.00    0.00  512000/512000      int* std::fill_n<int*, unsigned long, int>(int*, unsigned long, int const&) [1136]
-----------------------------------------------
                0.00    0.00  512000/512000      std::vector<int, std::allocator<int> >::_S_check_init_len(unsigned long, std::allocator<int> const&) [1127]
[1126]   0.0    0.00    0.00  512000         std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&) [1126]
                0.00    0.00  512000/512000      std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [1124]
                0.00    0.00  512000/514001      unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&) [1098]
-----------------------------------------------
                0.00    0.00  512000/512000      std::vector<int, std::allocator<int> >::vector(unsigned long, int const&, std::allocator<int> const&) [1129]
[1127]   0.0    0.00    0.00  512000         std::vector<int, std::allocator<int> >::_S_check_init_len(unsigned long, std::allocator<int> const&) [1127]
                0.00    0.00  512000/1024000     std::allocator<int>::allocator(std::allocator<int> const&) [1084]
                0.00    0.00  512000/512000      std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&) [1126]
                0.00    0.00  512000/1536000     std::allocator<int>::~allocator() [1073]
-----------------------------------------------
                0.00    0.00  512000/512000      std::vector<int, std::allocator<int> >::vector(unsigned long, int const&, std::allocator<int> const&) [1129]
[1128]   0.0    0.00    0.00  512000         std::vector<int, std::allocator<int> >::_M_fill_initialize(unsigned long, int const&) [1128]
                0.00    0.00  512000/1024000     std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [1085]
                0.00    0.00  512000/512000      int* std::__uninitialized_fill_n_a<int*, unsigned long, int, int>(int*, unsigned long, int const&, std::allocator<int>&) [1135]
-----------------------------------------------
                0.00    0.00  512000/512000      CQP::NumericalGrid<1u, 1u>::expand(int) const [1107]
[1129]   0.0    0.00    0.00  512000         std::vector<int, std::allocator<int> >::vector(unsigned long, int const&, std::allocator<int> const&) [1129]
                0.00    0.00  512000/512000      std::vector<int, std::allocator<int> >::_S_check_init_len(unsigned long, std::allocator<int> const&) [1127]
                0.00    0.00  512000/512000      std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&) [1120]
                0.00    0.00  512000/512000      std::vector<int, std::allocator<int> >::_M_fill_initialize(unsigned long, int const&) [1128]
-----------------------------------------------
                0.00    0.00  256000/512000      CQP::FFTExecutor<1u, 0u>::inputWave(CQP::Wavefunction<1u> const&) [1245]
                0.00    0.00  256000/512000      CQP::FFTExecutor<1u, 0u>::execute() [1244]
[1130]   0.0    0.00    0.00  512000         std::vector<int, std::allocator<int> >::~vector() [1130]
                0.00    0.00  512000/1024000     std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [1085]
                0.00    0.00  512000/512000      void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [1138]
                0.00    0.00  512000/512000      std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [1121]
-----------------------------------------------
                0.00    0.00  512000/512000      int* std::fill_n<int*, unsigned long, int>(int*, unsigned long, int const&) [1136]
[1131]   0.0    0.00    0.00  512000         int* std::__fill_n_a<int*, unsigned long, int>(int*, unsigned long, int const&, std::random_access_iterator_tag) [1131]
                0.00    0.00  512000/512000      void std::__fill_a<int*, int>(int*, int*, int const&) [1139]
-----------------------------------------------
                0.00    0.00  512000/512000      int* std::fill_n<int*, unsigned long, int>(int*, unsigned long, int const&) [1136]
[1132]   0.0    0.00    0.00  512000         std::__size_to_integer(unsigned long) [1132]
-----------------------------------------------
                0.00    0.00  512000/512000      int* std::fill_n<int*, unsigned long, int>(int*, unsigned long, int const&) [1136]
[1133]   0.0    0.00    0.00  512000         std::iterator_traits<int*>::iterator_category std::__iterator_category<int*>(int* const&) [1133]
-----------------------------------------------
                0.00    0.00  512000/512000      int* std::__uninitialized_fill_n_a<int*, unsigned long, int, int>(int*, unsigned long, int const&, std::allocator<int>&) [1135]
[1134]   0.0    0.00    0.00  512000         int* std::uninitialized_fill_n<int*, unsigned long, int>(int*, unsigned long, int const&) [1134]
                0.00    0.00  512000/512000      int* std::__uninitialized_fill_n<true>::__uninit_fill_n<int*, unsigned long, int>(int*, unsigned long, int const&) [1125]
-----------------------------------------------
                0.00    0.00  512000/512000      std::vector<int, std::allocator<int> >::_M_fill_initialize(unsigned long, int const&) [1128]
[1135]   0.0    0.00    0.00  512000         int* std::__uninitialized_fill_n_a<int*, unsigned long, int, int>(int*, unsigned long, int const&, std::allocator<int>&) [1135]
                0.00    0.00  512000/512000      int* std::uninitialized_fill_n<int*, unsigned long, int>(int*, unsigned long, int const&) [1134]
-----------------------------------------------
                0.00    0.00  512000/512000      int* std::__uninitialized_fill_n<true>::__uninit_fill_n<int*, unsigned long, int>(int*, unsigned long, int const&) [1125]
[1136]   0.0    0.00    0.00  512000         int* std::fill_n<int*, unsigned long, int>(int*, unsigned long, int const&) [1136]
                0.00    0.00  512000/512000      std::iterator_traits<int*>::iterator_category std::__iterator_category<int*>(int* const&) [1133]
                0.00    0.00  512000/512000      std::__size_to_integer(unsigned long) [1132]
                0.00    0.00  512000/512000      int* std::__fill_n_a<int*, unsigned long, int>(int*, unsigned long, int const&, std::random_access_iterator_tag) [1131]
-----------------------------------------------
                0.00    0.00  512000/512000      void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [1138]
[1137]   0.0    0.00    0.00  512000         void std::_Destroy<int*>(int*, int*) [1137]
                0.00    0.00  512000/512000      void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [1113]
-----------------------------------------------
                0.00    0.00  512000/512000      std::vector<int, std::allocator<int> >::~vector() [1130]
[1138]   0.0    0.00    0.00  512000         void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [1138]
                0.00    0.00  512000/512000      void std::_Destroy<int*>(int*, int*) [1137]
-----------------------------------------------
                0.00    0.00  512000/512000      int* std::__fill_n_a<int*, unsigned long, int>(int*, unsigned long, int const&, std::random_access_iterator_tag) [1131]
[1139]   0.0    0.00    0.00  512000         void std::__fill_a<int*, int>(int*, int*, int const&) [1139]
                0.00    0.00  512000/512000      __gnu_cxx::__enable_if<std::__is_scalar<int>::__value, void>::__type std::__fill_a1<int*, int>(int*, int*, int const&) [1140]
-----------------------------------------------
                0.00    0.00  512000/512000      void std::__fill_a<int*, int>(int*, int*, int const&) [1139]
[1140]   0.0    0.00    0.00  512000         __gnu_cxx::__enable_if<std::__is_scalar<int>::__value, void>::__type std::__fill_a1<int*, int>(int*, int*, int const&) [1140]
-----------------------------------------------
                0.00    0.00       1/259258      CQP::create1DWaveByExpression(CQP::NumericalGrid<1u, 1u> const&, std::function<std::complex<double> (double)>) [1291]
                0.00    0.00     256/259258      std::enable_if<is_invocable_r_v<std::complex<double>, test_omp()::{lambda(double)#1}&, double>, std::enable_if>::type std::__invoke_r<std::complex<double>, test_omp()::{lambda(double)#1}&, double>(std::complex<double>&&, (test_omp()::{lambda(double)#1}&)...) [1262]
                0.00    0.00    1000/259258      CQP::FFTExecutor<1u, 0u>::inputWave(CQP::Wavefunction<1u> const&) [1245]
                0.00    0.00    1001/259258      Eigen::DenseBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::Zero(long) [1227]
                0.00    0.00  257000/259258      CQP::FFTExecutor<1u, 0u>::execute() [1244]
[1141]   0.0    0.00    0.00  259258         std::complex<double>::complex(double, double) [1141]
-----------------------------------------------
                0.00    0.00    2002/258258      Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>& Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::_set_noalias<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >(Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > > const&) [1201]
                0.00    0.00  256256/258258      Eigen::DenseCoeffsBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, 1>::coeffRef(long) [1143]
[1142]   0.0    0.00    0.00  258258         Eigen::EigenBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::derived() [1142]
-----------------------------------------------
                0.00    0.00  256256/256256      Eigen::DenseCoeffsBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, 1>::operator()(long) [1144]
[1143]   0.0    0.00    0.00  256256         Eigen::DenseCoeffsBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, 1>::coeffRef(long) [1143]
                0.00    0.00  256256/258258      Eigen::EigenBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::derived() [1142]
                0.00    0.00  256256/768256      Eigen::internal::evaluator<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::evaluator(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> const&) [1093]
                0.00    0.00  256256/256256      Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >::coeffRef(long) [1145]
                0.00    0.00  256256/768256      Eigen::internal::evaluator<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::~evaluator() [1094]
-----------------------------------------------
                0.00    0.00  256256/256256      CQP::Wavefunction<1u>::Wavefunction(CQP::NumericalGrid<1u, 1u> const&, std::vector<std::complex<double>, std::allocator<std::complex<double> > > const&) [1192]
[1144]   0.0    0.00    0.00  256256         Eigen::DenseCoeffsBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, 1>::operator()(long) [1144]
                0.00    0.00  256256/1026514     Eigen::EigenBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::size() const [1081]
                0.00    0.00  256256/256256      Eigen::DenseCoeffsBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, 1>::coeffRef(long) [1143]
-----------------------------------------------
                0.00    0.00  256256/256256      Eigen::DenseCoeffsBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, 1>::coeffRef(long) [1143]
[1145]   0.0    0.00    0.00  256256         Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >::coeffRef(long) [1145]
-----------------------------------------------
                0.00    0.00  256256/256256      CQP::Wavefunction<1u>::Wavefunction(CQP::NumericalGrid<1u, 1u> const&, std::vector<std::complex<double>, std::allocator<std::complex<double> > > const&) [1192]
[1146]   0.0    0.00    0.00  256256         std::vector<std::complex<double>, std::allocator<std::complex<double> > >::operator[](unsigned long) const [1146]
-----------------------------------------------
                0.00    0.00     256/256256      CQP::create1DWaveByExpression(CQP::NumericalGrid<1u, 1u> const&, std::function<std::complex<double> (double)>) [1291]
                0.00    0.00  256000/256256      CQP::FFTExecutor<1u, 0u>::execute() [1244]
[1147]   0.0    0.00    0.00  256256         std::vector<std::complex<double>, std::allocator<std::complex<double> > >::operator[](unsigned long) [1147]
-----------------------------------------------
                0.00    0.00  256000/256000      CQP::FFTExecutor<1u, 0u>::inputWave(CQP::Wavefunction<1u> const&) [1245]
[1148]   0.0    0.00    0.00  256000         std::complex<double>::imag[abi:cxx11]() const [1148]
-----------------------------------------------
                0.00    0.00  256000/256000      CQP::FFTExecutor<1u, 0u>::inputWave(CQP::Wavefunction<1u> const&) [1245]
[1149]   0.0    0.00    0.00  256000         std::complex<double>::real[abi:cxx11]() const [1149]
-----------------------------------------------
                0.00    0.00  256000/256000      std::complex<double> std::operator/<double>(std::complex<double> const&, double const&) [1151]
[1150]   0.0    0.00    0.00  256000         std::complex<double>::operator/=(double) [1150]
-----------------------------------------------
                0.00    0.00  256000/256000      CQP::FFTExecutor<1u, 0u>::execute() [1244]
[1151]   0.0    0.00    0.00  256000         std::complex<double> std::operator/<double>(std::complex<double> const&, double const&) [1151]
                0.00    0.00  256000/256000      std::complex<double>::operator/=(double) [1150]
-----------------------------------------------
                0.00    0.00    6003/6003        std::allocator<std::complex<double> >::~allocator() [1153]
[1152]   0.0    0.00    0.00    6003         __gnu_cxx::new_allocator<std::complex<double> >::~new_allocator() [1152]
-----------------------------------------------
                0.00    0.00       1/6003        CQP::create1DWaveByExpression(CQP::NumericalGrid<1u, 1u> const&, std::function<std::complex<double> (double)>) [1291]
                0.00    0.00    1000/6003        CQP::FFTExecutor<1u, 0u>::inputWave(CQP::Wavefunction<1u> const&) [1245]
                0.00    0.00    1000/6003        CQP::FFTExecutor<1u, 0u>::execute() [1244]
                0.00    0.00    2001/6003        std::vector<std::complex<double>, std::allocator<std::complex<double> > >::_S_check_init_len(unsigned long, std::allocator<std::complex<double> > const&) [1180]
                0.00    0.00    2001/6003        std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_Vector_impl::~_Vector_impl() [1169]
[1153]   0.0    0.00    0.00    6003         std::allocator<std::complex<double> >::~allocator() [1153]
                0.00    0.00    6003/6003        __gnu_cxx::new_allocator<std::complex<double> >::~new_allocator() [1152]
-----------------------------------------------
                0.00    0.00    4002/4002        std::allocator<std::complex<double> >::allocator(std::allocator<std::complex<double> > const&) [1156]
[1154]   0.0    0.00    0.00    4002         __gnu_cxx::new_allocator<std::complex<double> >::new_allocator(__gnu_cxx::new_allocator<std::complex<double> > const&) [1154]
-----------------------------------------------
                0.00    0.00    2001/4002        __gnu_cxx::new_allocator<std::complex<double> >::max_size() const [1164]
                0.00    0.00    2001/4002        __gnu_cxx::new_allocator<std::complex<double> >::allocate(unsigned long, void const*) [1162]
[1155]   0.0    0.00    0.00    4002         __gnu_cxx::new_allocator<std::complex<double> >::_M_max_size() const [1155]
-----------------------------------------------
                0.00    0.00    2001/4002        std::vector<std::complex<double>, std::allocator<std::complex<double> > >::_S_check_init_len(unsigned long, std::allocator<std::complex<double> > const&) [1180]
                0.00    0.00    2001/4002        std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_Vector_impl::_Vector_impl(std::allocator<std::complex<double> > const&) [1168]
[1156]   0.0    0.00    0.00    4002         std::allocator<std::complex<double> >::allocator(std::allocator<std::complex<double> > const&) [1156]
                0.00    0.00    4002/4002        __gnu_cxx::new_allocator<std::complex<double> >::new_allocator(__gnu_cxx::new_allocator<std::complex<double> > const&) [1154]
-----------------------------------------------
                0.00    0.00    2001/4002        std::vector<std::complex<double>, std::allocator<std::complex<double> > >::~vector() [1183]
                0.00    0.00    2001/4002        std::vector<std::complex<double>, std::allocator<std::complex<double> > >::_M_fill_initialize(unsigned long, std::complex<double> const&) [1181]
[1157]   0.0    0.00    0.00    4002         std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_M_get_Tp_allocator() [1157]
-----------------------------------------------
                0.00    0.00    2002/2002        void Eigen::internal::conditional_aligned_free<true>(void*) [1159]
[1158]   0.0    0.00    0.00    2002         Eigen::internal::aligned_free(void*) [1158]
-----------------------------------------------
                0.00    0.00    2002/2002        void Eigen::internal::conditional_aligned_delete_auto<std::complex<double>, true>(std::complex<double>*, unsigned long) [1160]
[1159]   0.0    0.00    0.00    2002         void Eigen::internal::conditional_aligned_free<true>(void*) [1159]
                0.00    0.00    2002/2002        Eigen::internal::aligned_free(void*) [1158]
-----------------------------------------------
                0.00    0.00    1001/2002        Eigen::DenseStorage<std::complex<double>, -1, -1, 1, 0>::~DenseStorage() [1199]
                0.00    0.00    1001/2002        Eigen::DenseStorage<std::complex<double>, -1, -1, 1, 0>::resize(long, long, long) [1197]
[1160]   0.0    0.00    0.00    2002         void Eigen::internal::conditional_aligned_delete_auto<std::complex<double>, true>(std::complex<double>*, unsigned long) [1160]
                0.00    0.00    2002/2002        void Eigen::internal::conditional_aligned_free<true>(void*) [1159]
-----------------------------------------------
                0.00    0.00    2001/2001        std::allocator_traits<std::allocator<std::complex<double> > >::deallocate(std::allocator<std::complex<double> >&, std::complex<double>*, unsigned long) [1175]
[1161]   0.0    0.00    0.00    2001         __gnu_cxx::new_allocator<std::complex<double> >::deallocate(std::complex<double>*, unsigned long) [1161]
-----------------------------------------------
                0.00    0.00    2001/2001        std::allocator_traits<std::allocator<std::complex<double> > >::allocate(std::allocator<std::complex<double> >&, unsigned long) [1176]
[1162]   0.0    0.00    0.00    2001         __gnu_cxx::new_allocator<std::complex<double> >::allocate(unsigned long, void const*) [1162]
                0.00    0.00    2001/4002        __gnu_cxx::new_allocator<std::complex<double> >::_M_max_size() const [1155]
-----------------------------------------------
                0.00    0.00    2001/2001        std::allocator<std::complex<double> >::allocator() [1165]
[1163]   0.0    0.00    0.00    2001         __gnu_cxx::new_allocator<std::complex<double> >::new_allocator() [1163]
-----------------------------------------------
                0.00    0.00    2001/2001        std::allocator_traits<std::allocator<std::complex<double> > >::max_size(std::allocator<std::complex<double> > const&) [1177]
[1164]   0.0    0.00    0.00    2001         __gnu_cxx::new_allocator<std::complex<double> >::max_size() const [1164]
                0.00    0.00    2001/4002        __gnu_cxx::new_allocator<std::complex<double> >::_M_max_size() const [1155]
-----------------------------------------------
                0.00    0.00       1/2001        CQP::create1DWaveByExpression(CQP::NumericalGrid<1u, 1u> const&, std::function<std::complex<double> (double)>) [1291]
                0.00    0.00    1000/2001        CQP::FFTExecutor<1u, 0u>::inputWave(CQP::Wavefunction<1u> const&) [1245]
                0.00    0.00    1000/2001        CQP::FFTExecutor<1u, 0u>::execute() [1244]
[1165]   0.0    0.00    0.00    2001         std::allocator<std::complex<double> >::allocator() [1165]
                0.00    0.00    2001/2001        __gnu_cxx::new_allocator<std::complex<double> >::new_allocator() [1163]
-----------------------------------------------
                0.00    0.00    2001/2001        void std::_Destroy<std::complex<double>*>(std::complex<double>*, std::complex<double>*) [1186]
[1166]   0.0    0.00    0.00    2001         void std::_Destroy_aux<true>::__destroy<std::complex<double>*>(std::complex<double>*, std::complex<double>*) [1166]
-----------------------------------------------
                0.00    0.00    2001/2001        std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_M_create_storage(unsigned long) [1171]
[1167]   0.0    0.00    0.00    2001         std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_M_allocate(unsigned long) [1167]
                0.00    0.00    2001/2001        std::allocator_traits<std::allocator<std::complex<double> > >::allocate(std::allocator<std::complex<double> >&, unsigned long) [1176]
-----------------------------------------------
                0.00    0.00    2001/2001        std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_Vector_base(unsigned long, std::allocator<std::complex<double> > const&) [1173]
[1168]   0.0    0.00    0.00    2001         std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_Vector_impl::_Vector_impl(std::allocator<std::complex<double> > const&) [1168]
                0.00    0.00    2001/4002        std::allocator<std::complex<double> >::allocator(std::allocator<std::complex<double> > const&) [1156]
                0.00    0.00    2001/2001        std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_Vector_impl_data::_Vector_impl_data() [1172]
-----------------------------------------------
                0.00    0.00    2001/2001        std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::~_Vector_base() [1174]
[1169]   0.0    0.00    0.00    2001         std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_Vector_impl::~_Vector_impl() [1169]
                0.00    0.00    2001/6003        std::allocator<std::complex<double> >::~allocator() [1153]
-----------------------------------------------
                0.00    0.00    2001/2001        std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::~_Vector_base() [1174]
[1170]   0.0    0.00    0.00    2001         std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_M_deallocate(std::complex<double>*, unsigned long) [1170]
                0.00    0.00    2001/2001        std::allocator_traits<std::allocator<std::complex<double> > >::deallocate(std::allocator<std::complex<double> >&, std::complex<double>*, unsigned long) [1175]
-----------------------------------------------
                0.00    0.00    2001/2001        std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_Vector_base(unsigned long, std::allocator<std::complex<double> > const&) [1173]
[1171]   0.0    0.00    0.00    2001         std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_M_create_storage(unsigned long) [1171]
                0.00    0.00    2001/2001        std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_M_allocate(unsigned long) [1167]
-----------------------------------------------
                0.00    0.00    2001/2001        std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_Vector_impl::_Vector_impl(std::allocator<std::complex<double> > const&) [1168]
[1172]   0.0    0.00    0.00    2001         std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_Vector_impl_data::_Vector_impl_data() [1172]
-----------------------------------------------
                0.00    0.00    2001/2001        std::vector<std::complex<double>, std::allocator<std::complex<double> > >::vector(unsigned long, std::complex<double> const&, std::allocator<std::complex<double> > const&) [1182]
[1173]   0.0    0.00    0.00    2001         std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_Vector_base(unsigned long, std::allocator<std::complex<double> > const&) [1173]
                0.00    0.00    2001/2001        std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_Vector_impl::_Vector_impl(std::allocator<std::complex<double> > const&) [1168]
                0.00    0.00    2001/2001        std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_M_create_storage(unsigned long) [1171]
-----------------------------------------------
                0.00    0.00    2001/2001        std::vector<std::complex<double>, std::allocator<std::complex<double> > >::~vector() [1183]
[1174]   0.0    0.00    0.00    2001         std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::~_Vector_base() [1174]
                0.00    0.00    2001/2001        std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_M_deallocate(std::complex<double>*, unsigned long) [1170]
                0.00    0.00    2001/2001        std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_Vector_impl::~_Vector_impl() [1169]
-----------------------------------------------
                0.00    0.00    2001/2001        std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_M_deallocate(std::complex<double>*, unsigned long) [1170]
[1175]   0.0    0.00    0.00    2001         std::allocator_traits<std::allocator<std::complex<double> > >::deallocate(std::allocator<std::complex<double> >&, std::complex<double>*, unsigned long) [1175]
                0.00    0.00    2001/2001        __gnu_cxx::new_allocator<std::complex<double> >::deallocate(std::complex<double>*, unsigned long) [1161]
-----------------------------------------------
                0.00    0.00    2001/2001        std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_M_allocate(unsigned long) [1167]
[1176]   0.0    0.00    0.00    2001         std::allocator_traits<std::allocator<std::complex<double> > >::allocate(std::allocator<std::complex<double> >&, unsigned long) [1176]
                0.00    0.00    2001/2001        __gnu_cxx::new_allocator<std::complex<double> >::allocate(unsigned long, void const*) [1162]
-----------------------------------------------
                0.00    0.00    2001/2001        std::vector<std::complex<double>, std::allocator<std::complex<double> > >::_S_max_size(std::allocator<std::complex<double> > const&) [1179]
[1177]   0.0    0.00    0.00    2001         std::allocator_traits<std::allocator<std::complex<double> > >::max_size(std::allocator<std::complex<double> > const&) [1177]
                0.00    0.00    2001/2001        __gnu_cxx::new_allocator<std::complex<double> >::max_size() const [1164]
-----------------------------------------------
                0.00    0.00    2001/2001        std::complex<double>* std::uninitialized_fill_n<std::complex<double>*, unsigned long, std::complex<double> >(std::complex<double>*, unsigned long, std::complex<double> const&) [1184]
[1178]   0.0    0.00    0.00    2001         std::complex<double>* std::__uninitialized_fill_n<false>::__uninit_fill_n<std::complex<double>*, unsigned long, std::complex<double> >(std::complex<double>*, unsigned long, std::complex<double> const&) [1178]
                0.00    0.00  512256/512256      std::complex<double>* std::__addressof<std::complex<double> >(std::complex<double>&) [1101]
                0.00    0.00  512256/512256      void std::_Construct<std::complex<double>, std::complex<double> const&>(std::complex<double>*, std::complex<double> const&) [1100]
-----------------------------------------------
                0.00    0.00    2001/2001        std::vector<std::complex<double>, std::allocator<std::complex<double> > >::_S_check_init_len(unsigned long, std::allocator<std::complex<double> > const&) [1180]
[1179]   0.0    0.00    0.00    2001         std::vector<std::complex<double>, std::allocator<std::complex<double> > >::_S_max_size(std::allocator<std::complex<double> > const&) [1179]
                0.00    0.00    2001/2001        std::allocator_traits<std::allocator<std::complex<double> > >::max_size(std::allocator<std::complex<double> > const&) [1177]
                0.00    0.00    2001/514001      unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&) [1098]
-----------------------------------------------
                0.00    0.00    2001/2001        std::vector<std::complex<double>, std::allocator<std::complex<double> > >::vector(unsigned long, std::complex<double> const&, std::allocator<std::complex<double> > const&) [1182]
[1180]   0.0    0.00    0.00    2001         std::vector<std::complex<double>, std::allocator<std::complex<double> > >::_S_check_init_len(unsigned long, std::allocator<std::complex<double> > const&) [1180]
                0.00    0.00    2001/4002        std::allocator<std::complex<double> >::allocator(std::allocator<std::complex<double> > const&) [1156]
                0.00    0.00    2001/2001        std::vector<std::complex<double>, std::allocator<std::complex<double> > >::_S_max_size(std::allocator<std::complex<double> > const&) [1179]
                0.00    0.00    2001/6003        std::allocator<std::complex<double> >::~allocator() [1153]
-----------------------------------------------
                0.00    0.00    2001/2001        std::vector<std::complex<double>, std::allocator<std::complex<double> > >::vector(unsigned long, std::complex<double> const&, std::allocator<std::complex<double> > const&) [1182]
[1181]   0.0    0.00    0.00    2001         std::vector<std::complex<double>, std::allocator<std::complex<double> > >::_M_fill_initialize(unsigned long, std::complex<double> const&) [1181]
                0.00    0.00    2001/4002        std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_M_get_Tp_allocator() [1157]
                0.00    0.00    2001/2001        std::complex<double>* std::__uninitialized_fill_n_a<std::complex<double>*, unsigned long, std::complex<double>, std::complex<double> >(std::complex<double>*, unsigned long, std::complex<double> const&, std::allocator<std::complex<double> >&) [1185]
-----------------------------------------------
                0.00    0.00       1/2001        CQP::create1DWaveByExpression(CQP::NumericalGrid<1u, 1u> const&, std::function<std::complex<double> (double)>) [1291]
                0.00    0.00    1000/2001        CQP::FFTExecutor<1u, 0u>::inputWave(CQP::Wavefunction<1u> const&) [1245]
                0.00    0.00    1000/2001        CQP::FFTExecutor<1u, 0u>::execute() [1244]
[1182]   0.0    0.00    0.00    2001         std::vector<std::complex<double>, std::allocator<std::complex<double> > >::vector(unsigned long, std::complex<double> const&, std::allocator<std::complex<double> > const&) [1182]
                0.00    0.00    2001/2001        std::vector<std::complex<double>, std::allocator<std::complex<double> > >::_S_check_init_len(unsigned long, std::allocator<std::complex<double> > const&) [1180]
                0.00    0.00    2001/2001        std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_Vector_base(unsigned long, std::allocator<std::complex<double> > const&) [1173]
                0.00    0.00    2001/2001        std::vector<std::complex<double>, std::allocator<std::complex<double> > >::_M_fill_initialize(unsigned long, std::complex<double> const&) [1181]
-----------------------------------------------
                0.00    0.00       1/2001        CQP::create1DWaveByExpression(CQP::NumericalGrid<1u, 1u> const&, std::function<std::complex<double> (double)>) [1291]
                0.00    0.00    1000/2001        CQP::FFTExecutor<1u, 0u>::inputWave(CQP::Wavefunction<1u> const&) [1245]
                0.00    0.00    1000/2001        CQP::FFTExecutor<1u, 0u>::execute() [1244]
[1183]   0.0    0.00    0.00    2001         std::vector<std::complex<double>, std::allocator<std::complex<double> > >::~vector() [1183]
                0.00    0.00    2001/4002        std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_M_get_Tp_allocator() [1157]
                0.00    0.00    2001/2001        void std::_Destroy<std::complex<double>*, std::complex<double> >(std::complex<double>*, std::complex<double>*, std::allocator<std::complex<double> >&) [1187]
                0.00    0.00    2001/2001        std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::~_Vector_base() [1174]
-----------------------------------------------
                0.00    0.00    2001/2001        std::complex<double>* std::__uninitialized_fill_n_a<std::complex<double>*, unsigned long, std::complex<double>, std::complex<double> >(std::complex<double>*, unsigned long, std::complex<double> const&, std::allocator<std::complex<double> >&) [1185]
[1184]   0.0    0.00    0.00    2001         std::complex<double>* std::uninitialized_fill_n<std::complex<double>*, unsigned long, std::complex<double> >(std::complex<double>*, unsigned long, std::complex<double> const&) [1184]
                0.00    0.00    2001/2001        std::complex<double>* std::__uninitialized_fill_n<false>::__uninit_fill_n<std::complex<double>*, unsigned long, std::complex<double> >(std::complex<double>*, unsigned long, std::complex<double> const&) [1178]
-----------------------------------------------
                0.00    0.00    2001/2001        std::vector<std::complex<double>, std::allocator<std::complex<double> > >::_M_fill_initialize(unsigned long, std::complex<double> const&) [1181]
[1185]   0.0    0.00    0.00    2001         std::complex<double>* std::__uninitialized_fill_n_a<std::complex<double>*, unsigned long, std::complex<double>, std::complex<double> >(std::complex<double>*, unsigned long, std::complex<double> const&, std::allocator<std::complex<double> >&) [1185]
                0.00    0.00    2001/2001        std::complex<double>* std::uninitialized_fill_n<std::complex<double>*, unsigned long, std::complex<double> >(std::complex<double>*, unsigned long, std::complex<double> const&) [1184]
-----------------------------------------------
                0.00    0.00    2001/2001        void std::_Destroy<std::complex<double>*, std::complex<double> >(std::complex<double>*, std::complex<double>*, std::allocator<std::complex<double> >&) [1187]
[1186]   0.0    0.00    0.00    2001         void std::_Destroy<std::complex<double>*>(std::complex<double>*, std::complex<double>*) [1186]
                0.00    0.00    2001/2001        void std::_Destroy_aux<true>::__destroy<std::complex<double>*>(std::complex<double>*, std::complex<double>*) [1166]
-----------------------------------------------
                0.00    0.00    2001/2001        std::vector<std::complex<double>, std::allocator<std::complex<double> > >::~vector() [1183]
[1187]   0.0    0.00    0.00    2001         void std::_Destroy<std::complex<double>*, std::complex<double> >(std::complex<double>*, std::complex<double>*, std::allocator<std::complex<double> >&) [1187]
                0.00    0.00    2001/2001        void std::_Destroy<std::complex<double>*>(std::complex<double>*, std::complex<double>*) [1186]
-----------------------------------------------
                0.00    0.00    2000/2000        CQP::operator==(CQP::NumericalGrid<1u, 1u> const&, CQP::NumericalGrid<1u, 1u> const&) [1246]
[1188]   0.0    0.00    0.00    2000         bool (anonymous namespace)::isApproxEqual<double>(double const&, double const&) [1188]
-----------------------------------------------
                0.00    0.00     256/1024        std::_Function_handler<std::complex<double> (double), test_omp()::{lambda(double)#1}>::_M_invoke(std::_Any_data const&, double&&) [1261]
                0.00    0.00     256/1024        std::enable_if<is_invocable_r_v<std::complex<double>, test_omp()::{lambda(double)#1}&, double>, std::enable_if>::type std::__invoke_r<std::complex<double>, test_omp()::{lambda(double)#1}&, double>(std::complex<double>&&, (test_omp()::{lambda(double)#1}&)...) [1262]
                0.00    0.00     256/1024        double std::__invoke_impl<double, test_omp()::{lambda(double)#1}&, double>(std::__invoke_other, test_omp()::{lambda(double)#1}&, double&&) [1263]
                0.00    0.00     256/1024        std::function<std::complex<double> (double)>::operator()(double) const [1260]
[1189]   0.0    0.00    0.00    1024         double&& std::forward<double>(std::remove_reference<double>::type&) [1189]
-----------------------------------------------
                0.00    0.00       1/1006        CQP::NumericalGrid<1u, 1u>::NumericalGrid<int, int, int>(int, int, int) [1288]
                0.00    0.00       1/1006        CQP::NumericalGrid<1u, 1u>::NumericalGrid() [1287]
                0.00    0.00       1/1006        CQP::NumericalGrid<1u, 1u>::operator=(CQP::NumericalGrid<1u, 1u> const&) [1289]
                0.00    0.00       1/1006        CQP::NumericalGrid<1u, 1u>::NumericalGrid(int (&) [1], double (&) [1], double (&) [1]) [1286]
                0.00    0.00    1002/1006        CQP::NumericalGrid<1u, 1u>::NumericalGrid(CQP::NumericalGrid<1u, 1u> const&) [1191]
[1190]   0.0    0.00    0.00    1006         CQP::NumericalGrid<1u, 1u>::update_total_cnt() [1190]
-----------------------------------------------
                0.00    0.00       1/1002        CQP::FFTExecutor<1u, 0u>::FFTExecutor(CQP::NumericalGrid<1u, 1u> const&) [1283]
                0.00    0.00    1001/1002        CQP::Wavefunction<1u>::Wavefunction(CQP::NumericalGrid<1u, 1u> const&, std::vector<std::complex<double>, std::allocator<std::complex<double> > > const&) [1192]
[1191]   0.0    0.00    0.00    1002         CQP::NumericalGrid<1u, 1u>::NumericalGrid(CQP::NumericalGrid<1u, 1u> const&) [1191]
                0.00    0.00    1002/1006        CQP::NumericalGrid<1u, 1u>::update_total_cnt() [1190]
-----------------------------------------------
                0.00    0.00       1/1001        CQP::create1DWaveByExpression(CQP::NumericalGrid<1u, 1u> const&, std::function<std::complex<double> (double)>) [1291]
                0.00    0.00    1000/1001        CQP::FFTExecutor<1u, 0u>::execute() [1244]
[1192]   0.0    0.00    0.00    1001         CQP::Wavefunction<1u>::Wavefunction(CQP::NumericalGrid<1u, 1u> const&, std::vector<std::complex<double>, std::allocator<std::complex<double> > > const&) [1192]
                0.00    0.00  257257/1026514     Eigen::EigenBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::size() const [1081]
                0.00    0.00  256256/256256      std::vector<std::complex<double>, std::allocator<std::complex<double> > >::operator[](unsigned long) const [1146]
                0.00    0.00  256256/256256      Eigen::DenseCoeffsBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, 1>::operator()(long) [1144]
                0.00    0.00    2002/774262      CQP::NumericalGrid<1u, 1u>::getTotalCount() const [1086]
                0.00    0.00    1001/1002        CQP::NumericalGrid<1u, 1u>::NumericalGrid(CQP::NumericalGrid<1u, 1u> const&) [1191]
                0.00    0.00    1001/1001        Eigen::DenseBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::Zero(long) [1227]
                0.00    0.00    1001/1001        Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::Matrix<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >(Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&) [1208]
                0.00    0.00    1001/1001        std::vector<std::complex<double>, std::allocator<std::complex<double> > >::size() const [1236]
-----------------------------------------------
                0.00    0.00    1001/1001        test_omp() [1282]
[1193]   0.0    0.00    0.00    1001         CQP::Wavefunction<1u>::~Wavefunction() [1193]
                0.00    0.00    1001/1001        Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::~Matrix() [1209]
-----------------------------------------------
                0.00    0.00    1001/1001        Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::CwiseNullaryOp(long, long, Eigen::internal::scalar_constant_op<std::complex<double> > const&) [1200]
[1194]   0.0    0.00    0.00    1001         Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >::MatrixBase() [1194]
                0.00    0.00    1001/1001        Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >::DenseBase() [1225]
-----------------------------------------------
                0.00    0.00    1001/1001        Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::PlainObjectBase() [1206]
[1195]   0.0    0.00    0.00    1001         Eigen::MatrixBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::MatrixBase() [1195]
                0.00    0.00    1001/1001        Eigen::DenseBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::DenseBase() [1229]
-----------------------------------------------
                0.00    0.00    1001/1001        Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::data() [1203]
[1196]   0.0    0.00    0.00    1001         Eigen::DenseStorage<std::complex<double>, -1, -1, 1, 0>::data() [1196]
-----------------------------------------------
                0.00    0.00    1001/1001        Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::resize(long, long) [1205]
[1197]   0.0    0.00    0.00    1001         Eigen::DenseStorage<std::complex<double>, -1, -1, 1, 0>::resize(long, long, long) [1197]
                0.00    0.00    1001/2002        void Eigen::internal::conditional_aligned_delete_auto<std::complex<double>, true>(std::complex<double>*, unsigned long) [1160]
                0.00    0.00    1001/1001        std::complex<double>* Eigen::internal::conditional_aligned_new_auto<std::complex<double>, true>(unsigned long) [1223]
-----------------------------------------------
                0.00    0.00    1001/1001        Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::PlainObjectBase() [1206]
[1198]   0.0    0.00    0.00    1001         Eigen::DenseStorage<std::complex<double>, -1, -1, 1, 0>::DenseStorage() [1198]
-----------------------------------------------
                0.00    0.00    1001/1001        Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::~PlainObjectBase() [1207]
[1199]   0.0    0.00    0.00    1001         Eigen::DenseStorage<std::complex<double>, -1, -1, 1, 0>::~DenseStorage() [1199]
                0.00    0.00    1001/2002        void Eigen::internal::conditional_aligned_delete_auto<std::complex<double>, true>(std::complex<double>*, unsigned long) [1160]
-----------------------------------------------
                0.00    0.00    1001/1001        Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const Eigen::DenseBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::NullaryExpr<Eigen::internal::scalar_constant_op<std::complex<double> > >(long, Eigen::internal::scalar_constant_op<std::complex<double> > const&) [1226]
[1200]   0.0    0.00    0.00    1001         Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::CwiseNullaryOp(long, long, Eigen::internal::scalar_constant_op<std::complex<double> > const&) [1200]
                0.00    0.00    1001/1001        Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >::MatrixBase() [1194]
                0.00    0.00    1001/1001        Eigen::internal::variable_if_dynamic<long, -1>::variable_if_dynamic(long) [1218]
                0.00    0.00    1001/1001        Eigen::internal::variable_if_dynamic<long, 1>::variable_if_dynamic(long) [1217]
                0.00    0.00    1001/1001        Eigen::internal::scalar_constant_op<std::complex<double> >::scalar_constant_op(Eigen::internal::scalar_constant_op<std::complex<double> > const&) [1214]
-----------------------------------------------
                0.00    0.00    1001/1001        void Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::_init1<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >(Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > > const&) [1204]
[1201]   0.0    0.00    0.00    1001         Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>& Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::_set_noalias<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >(Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > > const&) [1201]
                0.00    0.00    2002/258258      Eigen::EigenBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::derived() [1142]
                0.00    0.00    1001/1001        Eigen::internal::assign_op<std::complex<double>, std::complex<double> >::assign_op() [1224]
                0.00    0.00    1001/1001        Eigen::EigenBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >::derived() const [1235]
                0.00    0.00    1001/1001        void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >, Eigen::internal::assign_op<std::complex<double>, std::complex<double> > >(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&, Eigen::internal::assign_op<std::complex<double>, std::complex<double> > const&) [1219]
-----------------------------------------------
                0.00    0.00    1001/1001        Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::Matrix<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >(Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&) [1208]
[1202]   0.0    0.00    0.00    1001         Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::_check_template_params() [1202]
-----------------------------------------------
                0.00    0.00    1001/1001        void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::Scalar>, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&, Eigen::internal::assign_op<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::Scalar, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::Scalar> const&) [1220]
[1203]   0.0    0.00    0.00    1001         Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::data() [1203]
                0.00    0.00    1001/1001        Eigen::DenseStorage<std::complex<double>, -1, -1, 1, 0>::data() [1196]
-----------------------------------------------
                0.00    0.00    1001/1001        Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::Matrix<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >(Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&) [1208]
[1204]   0.0    0.00    0.00    1001         void Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::_init1<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >(Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > > const&) [1204]
                0.00    0.00    1001/1001        Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>& Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::_set_noalias<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >(Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > > const&) [1201]
-----------------------------------------------
                0.00    0.00    1001/1001        void Eigen::internal::resize_if_allowed<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >, std::complex<double>, std::complex<double> >(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&, Eigen::internal::assign_op<std::complex<double>, std::complex<double> > const&) [1212]
[1205]   0.0    0.00    0.00    1001         Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::resize(long, long) [1205]
                0.00    0.00    1001/1001        Eigen::DenseStorage<std::complex<double>, -1, -1, 1, 0>::resize(long, long, long) [1197]
-----------------------------------------------
                0.00    0.00    1001/1001        Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::Matrix<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >(Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&) [1208]
[1206]   0.0    0.00    0.00    1001         Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::PlainObjectBase() [1206]
                0.00    0.00    1001/1001        Eigen::MatrixBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::MatrixBase() [1195]
                0.00    0.00    1001/1001        Eigen::DenseStorage<std::complex<double>, -1, -1, 1, 0>::DenseStorage() [1198]
-----------------------------------------------
                0.00    0.00    1001/1001        Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::~Matrix() [1209]
[1207]   0.0    0.00    0.00    1001         Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::~PlainObjectBase() [1207]
                0.00    0.00    1001/1001        Eigen::DenseStorage<std::complex<double>, -1, -1, 1, 0>::~DenseStorage() [1199]
-----------------------------------------------
                0.00    0.00    1001/1001        CQP::Wavefunction<1u>::Wavefunction(CQP::NumericalGrid<1u, 1u> const&, std::vector<std::complex<double>, std::allocator<std::complex<double> > > const&) [1192]
[1208]   0.0    0.00    0.00    1001         Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::Matrix<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >(Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&) [1208]
                0.00    0.00    1001/1001        Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::PlainObjectBase() [1206]
                0.00    0.00    1001/1001        Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::_check_template_params() [1202]
                0.00    0.00    1001/1001        void Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::_init1<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >(Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > > const&) [1204]
-----------------------------------------------
                0.00    0.00    1001/1001        CQP::Wavefunction<1u>::~Wavefunction() [1193]
[1209]   0.0    0.00    0.00    1001         Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::~Matrix() [1209]
                0.00    0.00    1001/1001        Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::~PlainObjectBase() [1207]
-----------------------------------------------
                0.00    0.00    1001/1001        void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >, Eigen::internal::assign_op<std::complex<double>, std::complex<double> > >(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&, Eigen::internal::assign_op<std::complex<double>, std::complex<double> > const&) [1219]
[1210]   0.0    0.00    0.00    1001         Eigen::internal::Assignment<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >, Eigen::internal::assign_op<std::complex<double>, std::complex<double> >, Eigen::internal::Dense2Dense, void>::run(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&, Eigen::internal::assign_op<std::complex<double>, std::complex<double> > const&) [1210]
                0.00    0.00    1001/1001        void Eigen::internal::check_for_aliasing<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> const&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&) [1213]
                0.00    0.00    1001/1001        void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::Scalar>, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&, Eigen::internal::assign_op<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::Scalar, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::Scalar> const&) [1220]
-----------------------------------------------
                0.00    0.00    1001/1001        void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long) [1221]
[1211]   0.0    0.00    0.00    1001         Eigen::internal::aligned_malloc(unsigned long) [1211]
                0.00    0.00    1001/1001        Eigen::internal::check_that_malloc_is_allowed() [1222]
-----------------------------------------------
                0.00    0.00    1001/1001        void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::Scalar>, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&, Eigen::internal::assign_op<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::Scalar, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::Scalar> const&) [1220]
[1212]   0.0    0.00    0.00    1001         void Eigen::internal::resize_if_allowed<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >, std::complex<double>, std::complex<double> >(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&, Eigen::internal::assign_op<std::complex<double>, std::complex<double> > const&) [1212]
                0.00    0.00    2002/1028516     Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::rows() const [1076]
                0.00    0.00    1001/1001        Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::rows() const [1231]
                0.00    0.00    1001/1001        Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::cols() const [1230]
                0.00    0.00    1001/1001        Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::resize(long, long) [1205]
                0.00    0.00    1001/1027515     Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::cols() const [1078]
-----------------------------------------------
                0.00    0.00    1001/1001        Eigen::internal::Assignment<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >, Eigen::internal::assign_op<std::complex<double>, std::complex<double> >, Eigen::internal::Dense2Dense, void>::run(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&, Eigen::internal::assign_op<std::complex<double>, std::complex<double> > const&) [1210]
[1213]   0.0    0.00    0.00    1001         void Eigen::internal::check_for_aliasing<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> const&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&) [1213]
-----------------------------------------------
                0.00    0.00    1001/1001        Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::CwiseNullaryOp(long, long, Eigen::internal::scalar_constant_op<std::complex<double> > const&) [1200]
[1214]   0.0    0.00    0.00    1001         Eigen::internal::scalar_constant_op<std::complex<double> >::scalar_constant_op(Eigen::internal::scalar_constant_op<std::complex<double> > const&) [1214]
-----------------------------------------------
                0.00    0.00    1001/1001        Eigen::DenseBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::Constant(long, std::complex<double> const&) [1228]
[1215]   0.0    0.00    0.00    1001         Eigen::internal::scalar_constant_op<std::complex<double> >::scalar_constant_op(std::complex<double> const&) [1215]
-----------------------------------------------
                0.00    0.00    1001/1001        Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::cols() const [1230]
[1216]   0.0    0.00    0.00    1001         Eigen::internal::variable_if_dynamic<long, 1>::value() [1216]
-----------------------------------------------
                0.00    0.00    1001/1001        Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::CwiseNullaryOp(long, long, Eigen::internal::scalar_constant_op<std::complex<double> > const&) [1200]
[1217]   0.0    0.00    0.00    1001         Eigen::internal::variable_if_dynamic<long, 1>::variable_if_dynamic(long) [1217]
-----------------------------------------------
                0.00    0.00    1001/1001        Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::CwiseNullaryOp(long, long, Eigen::internal::scalar_constant_op<std::complex<double> > const&) [1200]
[1218]   0.0    0.00    0.00    1001         Eigen::internal::variable_if_dynamic<long, -1>::variable_if_dynamic(long) [1218]
-----------------------------------------------
                0.00    0.00    1001/1001        Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>& Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::_set_noalias<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >(Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > > const&) [1201]
[1219]   0.0    0.00    0.00    1001         void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >, Eigen::internal::assign_op<std::complex<double>, std::complex<double> > >(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&, Eigen::internal::assign_op<std::complex<double>, std::complex<double> > const&) [1219]
                0.00    0.00    1001/1001        Eigen::internal::Assignment<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >, Eigen::internal::assign_op<std::complex<double>, std::complex<double> >, Eigen::internal::Dense2Dense, void>::run(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&, Eigen::internal::assign_op<std::complex<double>, std::complex<double> > const&) [1210]
-----------------------------------------------
                0.00    0.00    1001/1001        Eigen::internal::Assignment<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >, Eigen::internal::assign_op<std::complex<double>, std::complex<double> >, Eigen::internal::Dense2Dense, void>::run(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&, Eigen::internal::assign_op<std::complex<double>, std::complex<double> > const&) [1210]
[1220]   0.0    0.00    0.00    1001         void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::Scalar>, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&, Eigen::internal::assign_op<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::Scalar, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::Scalar> const&) [1220]
                0.00    0.00    1001/1001        Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::functor() const [1232]
                0.00    0.00    1001/1001        void Eigen::internal::resize_if_allowed<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >, std::complex<double>, std::complex<double> >(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&, Eigen::internal::assign_op<std::complex<double>, std::complex<double> > const&) [1212]
                0.00    0.00    1001/1001        Eigen::internal::scalar_constant_op<std::complex<double> >::operator()() const [1233]
                0.00    0.00    1001/1026514     Eigen::EigenBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::size() const [1081]
                0.00    0.00    1001/1001        Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::data() [1203]
                0.00    0.00    1001/1001        std::complex<double>* std::fill_n<std::complex<double>*, long, std::complex<double> >(std::complex<double>*, long, std::complex<double> const&) [1240]
-----------------------------------------------
                0.00    0.00    1001/1001        std::complex<double>* Eigen::internal::conditional_aligned_new_auto<std::complex<double>, true>(unsigned long) [1223]
[1221]   0.0    0.00    0.00    1001         void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long) [1221]
                0.00    0.00    1001/1001        Eigen::internal::aligned_malloc(unsigned long) [1211]
-----------------------------------------------
                0.00    0.00    1001/1001        Eigen::internal::aligned_malloc(unsigned long) [1211]
[1222]   0.0    0.00    0.00    1001         Eigen::internal::check_that_malloc_is_allowed() [1222]
-----------------------------------------------
                0.00    0.00    1001/1001        Eigen::DenseStorage<std::complex<double>, -1, -1, 1, 0>::resize(long, long, long) [1197]
[1223]   0.0    0.00    0.00    1001         std::complex<double>* Eigen::internal::conditional_aligned_new_auto<std::complex<double>, true>(unsigned long) [1223]
                0.00    0.00    1001/1001        void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long) [1221]
-----------------------------------------------
                0.00    0.00    1001/1001        Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>& Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::_set_noalias<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >(Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > > const&) [1201]
[1224]   0.0    0.00    0.00    1001         Eigen::internal::assign_op<std::complex<double>, std::complex<double> >::assign_op() [1224]
-----------------------------------------------
                0.00    0.00    1001/1001        Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >::MatrixBase() [1194]
[1225]   0.0    0.00    0.00    1001         Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >::DenseBase() [1225]
-----------------------------------------------
                0.00    0.00    1001/1001        Eigen::DenseBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::Constant(long, std::complex<double> const&) [1228]
[1226]   0.0    0.00    0.00    1001         Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const Eigen::DenseBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::NullaryExpr<Eigen::internal::scalar_constant_op<std::complex<double> > >(long, Eigen::internal::scalar_constant_op<std::complex<double> > const&) [1226]
                0.00    0.00    1001/1001        Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::CwiseNullaryOp(long, long, Eigen::internal::scalar_constant_op<std::complex<double> > const&) [1200]
-----------------------------------------------
                0.00    0.00    1001/1001        CQP::Wavefunction<1u>::Wavefunction(CQP::NumericalGrid<1u, 1u> const&, std::vector<std::complex<double>, std::allocator<std::complex<double> > > const&) [1192]
[1227]   0.0    0.00    0.00    1001         Eigen::DenseBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::Zero(long) [1227]
                0.00    0.00    1001/259258      std::complex<double>::complex(double, double) [1141]
                0.00    0.00    1001/1001        Eigen::DenseBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::Constant(long, std::complex<double> const&) [1228]
-----------------------------------------------
                0.00    0.00    1001/1001        Eigen::DenseBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::Zero(long) [1227]
[1228]   0.0    0.00    0.00    1001         Eigen::DenseBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::Constant(long, std::complex<double> const&) [1228]
                0.00    0.00    1001/1001        Eigen::internal::scalar_constant_op<std::complex<double> >::scalar_constant_op(std::complex<double> const&) [1215]
                0.00    0.00    1001/1001        Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const Eigen::DenseBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::NullaryExpr<Eigen::internal::scalar_constant_op<std::complex<double> > >(long, Eigen::internal::scalar_constant_op<std::complex<double> > const&) [1226]
-----------------------------------------------
                0.00    0.00    1001/1001        Eigen::MatrixBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::MatrixBase() [1195]
[1229]   0.0    0.00    0.00    1001         Eigen::DenseBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::DenseBase() [1229]
-----------------------------------------------
                0.00    0.00    1001/1001        void Eigen::internal::resize_if_allowed<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >, std::complex<double>, std::complex<double> >(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&, Eigen::internal::assign_op<std::complex<double>, std::complex<double> > const&) [1212]
[1230]   0.0    0.00    0.00    1001         Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::cols() const [1230]
                0.00    0.00    1001/1001        Eigen::internal::variable_if_dynamic<long, 1>::value() [1216]
-----------------------------------------------
                0.00    0.00    1001/1001        void Eigen::internal::resize_if_allowed<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >, std::complex<double>, std::complex<double> >(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&, Eigen::internal::assign_op<std::complex<double>, std::complex<double> > const&) [1212]
[1231]   0.0    0.00    0.00    1001         Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::rows() const [1231]
                0.00    0.00    1001/1001        Eigen::internal::variable_if_dynamic<long, -1>::value() const [1234]
-----------------------------------------------
                0.00    0.00    1001/1001        void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::Scalar>, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&, Eigen::internal::assign_op<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::Scalar, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::Scalar> const&) [1220]
[1232]   0.0    0.00    0.00    1001         Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::functor() const [1232]
-----------------------------------------------
                0.00    0.00    1001/1001        void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::Scalar>, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&, Eigen::internal::assign_op<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::Scalar, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::Scalar> const&) [1220]
[1233]   0.0    0.00    0.00    1001         Eigen::internal::scalar_constant_op<std::complex<double> >::operator()() const [1233]
-----------------------------------------------
                0.00    0.00    1001/1001        Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::rows() const [1231]
[1234]   0.0    0.00    0.00    1001         Eigen::internal::variable_if_dynamic<long, -1>::value() const [1234]
-----------------------------------------------
                0.00    0.00    1001/1001        Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>& Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::_set_noalias<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >(Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > > const&) [1201]
[1235]   0.0    0.00    0.00    1001         Eigen::EigenBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >::derived() const [1235]
-----------------------------------------------
                0.00    0.00    1001/1001        CQP::Wavefunction<1u>::Wavefunction(CQP::NumericalGrid<1u, 1u> const&, std::vector<std::complex<double>, std::allocator<std::complex<double> > > const&) [1192]
[1236]   0.0    0.00    0.00    1001         std::vector<std::complex<double>, std::allocator<std::complex<double> > >::size() const [1236]
-----------------------------------------------
                0.00    0.00    1001/1001        std::complex<double>* std::fill_n<std::complex<double>*, long, std::complex<double> >(std::complex<double>*, long, std::complex<double> const&) [1240]
[1237]   0.0    0.00    0.00    1001         std::complex<double>* std::__fill_n_a<std::complex<double>*, long, std::complex<double> >(std::complex<double>*, long, std::complex<double> const&, std::random_access_iterator_tag) [1237]
                0.00    0.00    1001/1001        void std::__fill_a<std::complex<double>*, std::complex<double> >(std::complex<double>*, std::complex<double>*, std::complex<double> const&) [1241]
-----------------------------------------------
                0.00    0.00    1001/1001        std::complex<double>* std::fill_n<std::complex<double>*, long, std::complex<double> >(std::complex<double>*, long, std::complex<double> const&) [1240]
[1238]   0.0    0.00    0.00    1001         std::__size_to_integer(long) [1238]
-----------------------------------------------
                0.00    0.00    1001/1001        std::complex<double>* std::fill_n<std::complex<double>*, long, std::complex<double> >(std::complex<double>*, long, std::complex<double> const&) [1240]
[1239]   0.0    0.00    0.00    1001         std::iterator_traits<std::complex<double>*>::iterator_category std::__iterator_category<std::complex<double>*>(std::complex<double>* const&) [1239]
-----------------------------------------------
                0.00    0.00    1001/1001        void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::Scalar>, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&, Eigen::internal::assign_op<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::Scalar, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::Scalar> const&) [1220]
[1240]   0.0    0.00    0.00    1001         std::complex<double>* std::fill_n<std::complex<double>*, long, std::complex<double> >(std::complex<double>*, long, std::complex<double> const&) [1240]
                0.00    0.00    1001/1001        std::iterator_traits<std::complex<double>*>::iterator_category std::__iterator_category<std::complex<double>*>(std::complex<double>* const&) [1239]
                0.00    0.00    1001/1001        std::__size_to_integer(long) [1238]
                0.00    0.00    1001/1001        std::complex<double>* std::__fill_n_a<std::complex<double>*, long, std::complex<double> >(std::complex<double>*, long, std::complex<double> const&, std::random_access_iterator_tag) [1237]
-----------------------------------------------
                0.00    0.00    1001/1001        std::complex<double>* std::__fill_n_a<std::complex<double>*, long, std::complex<double> >(std::complex<double>*, long, std::complex<double> const&, std::random_access_iterator_tag) [1237]
[1241]   0.0    0.00    0.00    1001         void std::__fill_a<std::complex<double>*, std::complex<double> >(std::complex<double>*, std::complex<double>*, std::complex<double> const&) [1241]
                0.00    0.00    1001/1001        __gnu_cxx::__enable_if<!std::__is_scalar<std::complex<double> >::__value, void>::__type std::__fill_a1<std::complex<double>*, std::complex<double> >(std::complex<double>*, std::complex<double>*, std::complex<double> const&) [1242]
-----------------------------------------------
                0.00    0.00    1001/1001        void std::__fill_a<std::complex<double>*, std::complex<double> >(std::complex<double>*, std::complex<double>*, std::complex<double> const&) [1241]
[1242]   0.0    0.00    0.00    1001         __gnu_cxx::__enable_if<!std::__is_scalar<std::complex<double> >::__value, void>::__type std::__fill_a1<std::complex<double>*, std::complex<double> >(std::complex<double>*, std::complex<double>*, std::complex<double> const&) [1242]
-----------------------------------------------
                0.00    0.00    1000/1000        CQP::operator==(CQP::NumericalGrid<1u, 1u> const&, CQP::NumericalGrid<1u, 1u> const&) [1246]
[1243]   0.0    0.00    0.00    1000         bool (anonymous namespace)::isApproxEqual<int>(int const&, int const&) [1243]
-----------------------------------------------
                0.00    0.00    1000/1000        test_omp() [1282]
[1244]   0.0    0.00    0.00    1000         CQP::FFTExecutor<1u, 0u>::execute() [1244]
                0.00    0.00  514000/774262      CQP::NumericalGrid<1u, 1u>::getTotalCount() const [1086]
                0.00    0.00  512000/1536000     std::vector<int, std::allocator<int> >::operator[](unsigned long) [1074]
                0.00    0.00  257000/259258      std::complex<double>::complex(double, double) [1141]
                0.00    0.00  256000/512000      CQP::NumericalGrid<1u, 1u>::expand(int) const [1107]
                0.00    0.00  256000/256000      std::complex<double> std::operator/<double>(std::complex<double> const&, double const&) [1151]
                0.00    0.00  256000/768000      CQP::NumericalGrid<1u, 1u>::shrink(int (&) [1]) const [1097]
                0.00    0.00  256000/256256      std::vector<std::complex<double>, std::allocator<std::complex<double> > >::operator[](unsigned long) [1147]
                0.00    0.00  256000/512000      std::vector<int, std::allocator<int> >::~vector() [1130]
                0.00    0.00    1000/2001        std::allocator<std::complex<double> >::allocator() [1165]
                0.00    0.00    1000/6003        std::allocator<std::complex<double> >::~allocator() [1153]
                0.00    0.00    1000/2001        std::vector<std::complex<double>, std::allocator<std::complex<double> > >::vector(unsigned long, std::complex<double> const&, std::allocator<std::complex<double> > const&) [1182]
                0.00    0.00    1000/2001        std::vector<std::complex<double>, std::allocator<std::complex<double> > >::~vector() [1183]
                0.00    0.00    1000/1001        CQP::Wavefunction<1u>::Wavefunction(CQP::NumericalGrid<1u, 1u> const&, std::vector<std::complex<double>, std::allocator<std::complex<double> > > const&) [1192]
-----------------------------------------------
                0.00    0.00    1000/1000        test_omp() [1282]
[1245]   0.0    0.00    0.00    1000         CQP::FFTExecutor<1u, 0u>::inputWave(CQP::Wavefunction<1u> const&) [1245]
                0.00    0.00  512000/1536000     std::vector<int, std::allocator<int> >::operator[](unsigned long) [1074]
                0.00    0.00  512000/512000      CQP::Wavefunction<1u>::getValueByIndex(int) const [1106]
                0.00    0.00  512000/768000      CQP::NumericalGrid<1u, 1u>::shrink(int (&) [1]) const [1097]
                0.00    0.00  258000/774262      CQP::NumericalGrid<1u, 1u>::getTotalCount() const [1086]
                0.00    0.00  256000/512000      CQP::NumericalGrid<1u, 1u>::expand(int) const [1107]
                0.00    0.00  256000/256000      std::complex<double>::real[abi:cxx11]() const [1149]
                0.00    0.00  256000/256000      std::complex<double>::imag[abi:cxx11]() const [1148]
                0.00    0.00  256000/512000      std::vector<int, std::allocator<int> >::~vector() [1130]
                0.00    0.00    1000/1000        CQP::Wavefunction<1u>::getGrid() const [1247]
                0.00    0.00    1000/1000        CQP::operator==(CQP::NumericalGrid<1u, 1u> const&, CQP::NumericalGrid<1u, 1u> const&) [1246]
                0.00    0.00    1000/2001        std::allocator<std::complex<double> >::allocator() [1165]
                0.00    0.00    1000/259258      std::complex<double>::complex(double, double) [1141]
                0.00    0.00    1000/2001        std::vector<std::complex<double>, std::allocator<std::complex<double> > >::vector(unsigned long, std::complex<double> const&, std::allocator<std::complex<double> > const&) [1182]
                0.00    0.00    1000/6003        std::allocator<std::complex<double> >::~allocator() [1153]
                0.00    0.00    1000/2001        std::vector<std::complex<double>, std::allocator<std::complex<double> > >::~vector() [1183]
-----------------------------------------------
                0.00    0.00    1000/1000        CQP::FFTExecutor<1u, 0u>::inputWave(CQP::Wavefunction<1u> const&) [1245]
[1246]   0.0    0.00    0.00    1000         CQP::operator==(CQP::NumericalGrid<1u, 1u> const&, CQP::NumericalGrid<1u, 1u> const&) [1246]
                0.00    0.00    2000/2000        bool (anonymous namespace)::isApproxEqual<double>(double const&, double const&) [1188]
                0.00    0.00    1000/1000        bool (anonymous namespace)::isApproxEqual<int>(int const&, int const&) [1243]
-----------------------------------------------
                0.00    0.00    1000/1000        CQP::FFTExecutor<1u, 0u>::inputWave(CQP::Wavefunction<1u> const&) [1245]
[1247]   0.0    0.00    0.00    1000         CQP::Wavefunction<1u>::getGrid() const [1247]
-----------------------------------------------
                0.00    0.00     256/512         std::enable_if<is_invocable_r_v<std::complex<double>, test_omp()::{lambda(double)#1}&, double>, std::enable_if>::type std::__invoke_r<std::complex<double>, test_omp()::{lambda(double)#1}&, double>(std::complex<double>&&, (test_omp()::{lambda(double)#1}&)...) [1262]
                0.00    0.00     256/512         double std::__invoke_impl<double, test_omp()::{lambda(double)#1}&, double>(std::__invoke_other, test_omp()::{lambda(double)#1}&, double&&) [1263]
[1248]   0.0    0.00    0.00     512         test_omp()::{lambda(double)#1}& std::forward<test_omp()::{lambda(double)#1}&>(std::remove_reference<test_omp()::{lambda(double)#1}&>::type&) [1248]
-----------------------------------------------
                0.00    0.00       2/258         std::function<std::complex<double> (double)>::operator bool() const [1276]
                0.00    0.00     256/258         std::function<std::complex<double> (double)>::operator()(double) const [1260]
[1249]   0.0    0.00    0.00     258         std::_Function_base::_M_empty() const [1249]
-----------------------------------------------
                0.00    0.00     258/258         test_omp()::{lambda(double)#1} const& std::_Any_data::_M_access<test_omp()::{lambda(double)#1}>() const [1251]
[1250]   0.0    0.00    0.00     258         std::_Any_data::_M_access() const [1250]
-----------------------------------------------
                0.00    0.00     258/258         std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_get_pointer(std::_Any_data const&) [1252]
[1251]   0.0    0.00    0.00     258         test_omp()::{lambda(double)#1} const& std::_Any_data::_M_access<test_omp()::{lambda(double)#1}>() const [1251]
                0.00    0.00     258/258         std::_Any_data::_M_access() const [1250]
-----------------------------------------------
                0.00    0.00       2/258         std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}> const&, std::_Manager_operation) [1266]
                0.00    0.00     256/258         std::_Function_handler<std::complex<double> (double), test_omp()::{lambda(double)#1}>::_M_invoke(std::_Any_data const&, double&&) [1261]
[1252]   0.0    0.00    0.00     258         std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_get_pointer(std::_Any_data const&) [1252]
                0.00    0.00     258/258         test_omp()::{lambda(double)#1} const& std::_Any_data::_M_access<test_omp()::{lambda(double)#1}>() const [1251]
                0.00    0.00     258/258         test_omp()::{lambda(double)#1} const* std::__addressof<test_omp()::{lambda(double)#1} const>(test_omp()::{lambda(double)#1} const&) [1253]
-----------------------------------------------
                0.00    0.00     258/258         std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_get_pointer(std::_Any_data const&) [1252]
[1253]   0.0    0.00    0.00     258         test_omp()::{lambda(double)#1} const* std::__addressof<test_omp()::{lambda(double)#1} const>(test_omp()::{lambda(double)#1} const&) [1253]
-----------------------------------------------
                0.00    0.00     256/256         CQP::create1DWaveByExpression(CQP::NumericalGrid<1u, 1u> const&, std::function<std::complex<double> (double)>) [1291]
[1254]   0.0    0.00    0.00     256         CQP::GridPoint<1u>::x() [1254]
-----------------------------------------------
                0.00    0.00     256/256         CQP::NumericalGrid<1u, 1u>::index_agent(int) const [1257]
[1255]   0.0    0.00    0.00     256         CQP::GridPoint<1u>::get(int) [1255]
-----------------------------------------------
                0.00    0.00     256/256         CQP::NumericalGrid<1u, 1u>::index_agent(int) const [1257]
[1256]   0.0    0.00    0.00     256         CQP::GridPoint<1u>::GridPoint() [1256]
-----------------------------------------------
                0.00    0.00     256/256         CQP::NumericalGrid<1u, 1u>::index(int) const [1259]
[1257]   0.0    0.00    0.00     256         CQP::NumericalGrid<1u, 1u>::index_agent(int) const [1257]
                0.00    0.00     256/256         CQP::GridPoint<1u>::GridPoint() [1256]
                0.00    0.00     256/256         CQP::NumericalGrid<1u, 1u>::get_value_by_index(int, int) const [1258]
                0.00    0.00     256/256         CQP::GridPoint<1u>::get(int) [1255]
-----------------------------------------------
                0.00    0.00     256/256         CQP::NumericalGrid<1u, 1u>::index_agent(int) const [1257]
[1258]   0.0    0.00    0.00     256         CQP::NumericalGrid<1u, 1u>::get_value_by_index(int, int) const [1258]
-----------------------------------------------
                0.00    0.00     256/256         CQP::create1DWaveByExpression(CQP::NumericalGrid<1u, 1u> const&, std::function<std::complex<double> (double)>) [1291]
[1259]   0.0    0.00    0.00     256         CQP::NumericalGrid<1u, 1u>::index(int) const [1259]
                0.00    0.00     256/256         CQP::NumericalGrid<1u, 1u>::index_agent(int) const [1257]
-----------------------------------------------
                0.00    0.00     256/256         CQP::create1DWaveByExpression(CQP::NumericalGrid<1u, 1u> const&, std::function<std::complex<double> (double)>) [1291]
[1260]   0.0    0.00    0.00     256         std::function<std::complex<double> (double)>::operator()(double) const [1260]
                0.00    0.00     256/258         std::_Function_base::_M_empty() const [1249]
                0.00    0.00     256/1024        double&& std::forward<double>(std::remove_reference<double>::type&) [1189]
                0.00    0.00     256/256         std::_Function_handler<std::complex<double> (double), test_omp()::{lambda(double)#1}>::_M_invoke(std::_Any_data const&, double&&) [1261]
-----------------------------------------------
                0.00    0.00     256/256         std::function<std::complex<double> (double)>::operator()(double) const [1260]
[1261]   0.0    0.00    0.00     256         std::_Function_handler<std::complex<double> (double), test_omp()::{lambda(double)#1}>::_M_invoke(std::_Any_data const&, double&&) [1261]
                0.00    0.00     256/1024        double&& std::forward<double>(std::remove_reference<double>::type&) [1189]
                0.00    0.00     256/258         std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_get_pointer(std::_Any_data const&) [1252]
                0.00    0.00     256/256         std::enable_if<is_invocable_r_v<std::complex<double>, test_omp()::{lambda(double)#1}&, double>, std::enable_if>::type std::__invoke_r<std::complex<double>, test_omp()::{lambda(double)#1}&, double>(std::complex<double>&&, (test_omp()::{lambda(double)#1}&)...) [1262]
-----------------------------------------------
                0.00    0.00     256/256         std::_Function_handler<std::complex<double> (double), test_omp()::{lambda(double)#1}>::_M_invoke(std::_Any_data const&, double&&) [1261]
[1262]   0.0    0.00    0.00     256         std::enable_if<is_invocable_r_v<std::complex<double>, test_omp()::{lambda(double)#1}&, double>, std::enable_if>::type std::__invoke_r<std::complex<double>, test_omp()::{lambda(double)#1}&, double>(std::complex<double>&&, (test_omp()::{lambda(double)#1}&)...) [1262]
                0.00    0.00     256/1024        double&& std::forward<double>(std::remove_reference<double>::type&) [1189]
                0.00    0.00     256/512         test_omp()::{lambda(double)#1}& std::forward<test_omp()::{lambda(double)#1}&>(std::remove_reference<test_omp()::{lambda(double)#1}&>::type&) [1248]
                0.00    0.00     256/256         double std::__invoke_impl<double, test_omp()::{lambda(double)#1}&, double>(std::__invoke_other, test_omp()::{lambda(double)#1}&, double&&) [1263]
                0.00    0.00     256/259258      std::complex<double>::complex(double, double) [1141]
-----------------------------------------------
                0.00    0.00     256/256         std::enable_if<is_invocable_r_v<std::complex<double>, test_omp()::{lambda(double)#1}&, double>, std::enable_if>::type std::__invoke_r<std::complex<double>, test_omp()::{lambda(double)#1}&, double>(std::complex<double>&&, (test_omp()::{lambda(double)#1}&)...) [1262]
[1263]   0.0    0.00    0.00     256         double std::__invoke_impl<double, test_omp()::{lambda(double)#1}&, double>(std::__invoke_other, test_omp()::{lambda(double)#1}&, double&&) [1263]
                0.00    0.00     256/512         test_omp()::{lambda(double)#1}& std::forward<test_omp()::{lambda(double)#1}&>(std::remove_reference<test_omp()::{lambda(double)#1}&>::type&) [1248]
                0.00    0.00     256/1024        double&& std::forward<double>(std::remove_reference<double>::type&) [1189]
                0.00    0.00     256/256         test_omp()::{lambda(double)#1}::operator()(double) const [1264]
-----------------------------------------------
                0.00    0.00     256/256         double std::__invoke_impl<double, test_omp()::{lambda(double)#1}&, double>(std::__invoke_other, test_omp()::{lambda(double)#1}&, double&&) [1263]
[1264]   0.0    0.00    0.00     256         test_omp()::{lambda(double)#1}::operator()(double) const [1264]
-----------------------------------------------
                0.00    0.00       1/6           void std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_create<{lambda(double)#1}>(std::_Any_data&, {lambda(double)#1}&&, std::integral_constant<bool, true>) [1304]
                0.00    0.00       2/6           void std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_create<{lambda(double)#1} const&>(std::_Any_data&, {lambda(double)#1} const&, std::integral_constant<bool, true>) [1278]
                0.00    0.00       3/6           test_omp()::{lambda(double)#1}& std::_Any_data::_M_access<test_omp()::{lambda(double)#1}>() [1274]
[1265]   0.0    0.00    0.00       6         std::_Any_data::_M_access() [1265]
-----------------------------------------------
                0.00    0.00       5/5           std::_Function_handler<std::complex<double> (double), test_omp()::{lambda(double)#1}>::_M_manager(std::_Any_data&, std::_Function_handler<std::complex<double> (double), test_omp()::{lambda(double)#1}> const&, std::_Manager_operation) [1267]
[1266]   0.0    0.00    0.00       5         std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}> const&, std::_Manager_operation) [1266]
                0.00    0.00       3/3           std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>) [1270]
                0.00    0.00       2/258         std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_get_pointer(std::_Any_data const&) [1252]
                0.00    0.00       2/2           void std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_init_functor<{lambda(double)#1} const&>(std::_Any_data&, {lambda(double)#1} const&) [1277]
-----------------------------------------------
                0.00    0.00       2/5           std::function<std::complex<double> (double)>::function(std::function<std::complex<double> (double)> const&) [1279]
                0.00    0.00       3/5           std::_Function_base::~_Function_base() [1272]
[1267]   0.0    0.00    0.00       5         std::_Function_handler<std::complex<double> (double), test_omp()::{lambda(double)#1}>::_M_manager(std::_Any_data&, std::_Function_handler<std::complex<double> (double), test_omp()::{lambda(double)#1}> const&, std::_Manager_operation) [1267]
                0.00    0.00       5/5           std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}> const&, std::_Manager_operation) [1266]
-----------------------------------------------
                0.00    0.00       2/4           void std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_init_functor<{lambda(double)#1} const&>(std::_Any_data&, {lambda(double)#1} const&) [1277]
                0.00    0.00       2/4           void std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_create<{lambda(double)#1} const&>(std::_Any_data&, {lambda(double)#1} const&, std::integral_constant<bool, true>) [1278]
[1268]   0.0    0.00    0.00       4         test_omp()::{lambda(double)#1} const& std::forward<test_omp()::{lambda(double)#1} const&>(std::remove_reference<test_omp()::{lambda(double)#1} const&>::type&) [1268]
-----------------------------------------------
                0.00    0.00       3/3           CQP::FFTExecutor<1u, 0u>::FFTExecutor(CQP::NumericalGrid<1u, 1u> const&) [1283]
[1269]   0.0    0.00    0.00       3         CQP::NumericalGrid<1u, 1u>::getCount(int) const [1269]
-----------------------------------------------
                0.00    0.00       3/3           std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}> const&, std::_Manager_operation) [1266]
[1270]   0.0    0.00    0.00       3         std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>) [1270]
                0.00    0.00       3/3           test_omp()::{lambda(double)#1}& std::_Any_data::_M_access<test_omp()::{lambda(double)#1}>() [1274]
-----------------------------------------------
                0.00    0.00       1/3           std::function<std::complex<double> (double)>::function<test_omp()::{lambda(double)#1}, void>(test_omp()::{lambda(double)#1}&&) [1305]
                0.00    0.00       2/3           std::function<std::complex<double> (double)>::function(std::function<std::complex<double> (double)> const&) [1279]
[1271]   0.0    0.00    0.00       3         std::_Function_base::_Function_base() [1271]
-----------------------------------------------
                0.00    0.00       3/3           std::function<std::complex<double> (double)>::~function() [1273]
[1272]   0.0    0.00    0.00       3         std::_Function_base::~_Function_base() [1272]
                0.00    0.00       3/5           std::_Function_handler<std::complex<double> (double), test_omp()::{lambda(double)#1}>::_M_manager(std::_Any_data&, std::_Function_handler<std::complex<double> (double), test_omp()::{lambda(double)#1}> const&, std::_Manager_operation) [1267]
-----------------------------------------------
                0.00    0.00       1/3           CQP::Wavefunction<1u> CQP::createWaveByExpression<1u, std::function<std::complex<double> (double)> >(CQP::NumericalGrid<1u, 1u> const&, std::function<std::complex<double> (double)>) [1290]
                0.00    0.00       2/3           test_omp() [1282]
[1273]   0.0    0.00    0.00       3         std::function<std::complex<double> (double)>::~function() [1273]
                0.00    0.00       3/3           std::_Function_base::~_Function_base() [1272]
-----------------------------------------------
                0.00    0.00       3/3           std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>) [1270]
[1274]   0.0    0.00    0.00       3         test_omp()::{lambda(double)#1}& std::_Any_data::_M_access<test_omp()::{lambda(double)#1}>() [1274]
                0.00    0.00       3/6           std::_Any_data::_M_access() [1265]
-----------------------------------------------
                0.00    0.00       1/3           std::function<std::complex<double> (double)>::function<test_omp()::{lambda(double)#1}, void>(test_omp()::{lambda(double)#1}&&) [1305]
                0.00    0.00       1/3           void std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_init_functor<{lambda(double)#1}>(std::_Any_data&, {lambda(double)#1}&&) [1302]
                0.00    0.00       1/3           void std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_create<{lambda(double)#1}>(std::_Any_data&, {lambda(double)#1}&&, std::integral_constant<bool, true>) [1304]
[1275]   0.0    0.00    0.00       3         test_omp()::{lambda(double)#1}&& std::forward<test_omp()::{lambda(double)#1}>(std::remove_reference<test_omp()::{lambda(double)#1}>::type&) [1275]
-----------------------------------------------
                0.00    0.00       2/2           std::function<std::complex<double> (double)>::function(std::function<std::complex<double> (double)> const&) [1279]
[1276]   0.0    0.00    0.00       2         std::function<std::complex<double> (double)>::operator bool() const [1276]
                0.00    0.00       2/258         std::_Function_base::_M_empty() const [1249]
-----------------------------------------------
                0.00    0.00       2/2           std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}> const&, std::_Manager_operation) [1266]
[1277]   0.0    0.00    0.00       2         void std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_init_functor<{lambda(double)#1} const&>(std::_Any_data&, {lambda(double)#1} const&) [1277]
                0.00    0.00       2/4           test_omp()::{lambda(double)#1} const& std::forward<test_omp()::{lambda(double)#1} const&>(std::remove_reference<test_omp()::{lambda(double)#1} const&>::type&) [1268]
                0.00    0.00       2/2           void std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_create<{lambda(double)#1} const&>(std::_Any_data&, {lambda(double)#1} const&, std::integral_constant<bool, true>) [1278]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_init_functor<{lambda(double)#1} const&>(std::_Any_data&, {lambda(double)#1} const&) [1277]
[1278]   0.0    0.00    0.00       2         void std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_create<{lambda(double)#1} const&>(std::_Any_data&, {lambda(double)#1} const&, std::integral_constant<bool, true>) [1278]
                0.00    0.00       2/6           std::_Any_data::_M_access() [1265]
                0.00    0.00       2/4           test_omp()::{lambda(double)#1} const& std::forward<test_omp()::{lambda(double)#1} const&>(std::remove_reference<test_omp()::{lambda(double)#1} const&>::type&) [1268]
                0.00    0.00       2/512259      operator new(unsigned long, void*) [1099]
-----------------------------------------------
                0.00    0.00       1/2           test_omp() [1282]
                0.00    0.00       1/2           CQP::Wavefunction<1u> CQP::createWaveByExpression<1u, std::function<std::complex<double> (double)> >(CQP::NumericalGrid<1u, 1u> const&, std::function<std::complex<double> (double)>) [1290]
[1279]   0.0    0.00    0.00       2         std::function<std::complex<double> (double)>::function(std::function<std::complex<double> (double)> const&) [1279]
                0.00    0.00       2/3           std::_Function_base::_Function_base() [1271]
                0.00    0.00       2/2           std::function<std::complex<double> (double)>::operator bool() const [1276]
                0.00    0.00       2/5           std::_Function_handler<std::complex<double> (double), test_omp()::{lambda(double)#1}>::_M_manager(std::_Any_data&, std::_Function_handler<std::complex<double> (double), test_omp()::{lambda(double)#1}> const&, std::_Manager_operation) [1267]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [4254]
[1280]   0.0    0.00    0.00       1         _GLOBAL__sub_I__Z7test_1dv [1280]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [1281]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z7test_1dv [1280]
[1281]   0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [1281]
                0.00    0.00       1/1           Eigen::internal::FixedInt<1>::FixedInt() [1293]
                0.00    0.00       1/1           Eigen::symbolic::SymbolExpr<Eigen::internal::symbolic_last_tag>::SymbolExpr() [1294]
                0.00    0.00       1/1           Eigen::internal::FixedInt<1>::operator()() const [1299]
                0.00    0.00       1/1           Eigen::internal::all_t::all_t() [1292]
                0.00    0.00       1/1           Eigen::symbolic::AddExpr<Eigen::symbolic::SymbolExpr<Eigen::internal::symbolic_last_tag>, Eigen::symbolic::ValueExpr<Eigen::internal::FixedInt<1> > > Eigen::symbolic::BaseExpr<Eigen::symbolic::SymbolExpr<Eigen::internal::symbolic_last_tag> >::operator+<1>(Eigen::internal::FixedInt<1>) const [1301]
-----------------------------------------------
                0.00    0.00       1/1           main [805]
[1282]   0.0    0.00    0.00       1         test_omp() [1282]
                0.00    0.00    1001/1001        CQP::Wavefunction<1u>::~Wavefunction() [1193]
                0.00    0.00    1000/1000        CQP::FFTExecutor<1u, 0u>::inputWave(CQP::Wavefunction<1u> const&) [1245]
                0.00    0.00    1000/1000        CQP::FFTExecutor<1u, 0u>::execute() [1244]
                0.00    0.00       2/3           std::function<std::complex<double> (double)>::~function() [1273]
                0.00    0.00       1/1           CQP::NumericalGrid<1u, 1u>::NumericalGrid<int, int, int>(int, int, int) [1288]
                0.00    0.00       1/1           std::function<std::complex<double> (double)>::function<test_omp()::{lambda(double)#1}, void>(test_omp()::{lambda(double)#1}&&) [1305]
                0.00    0.00       1/2           std::function<std::complex<double> (double)>::function(std::function<std::complex<double> (double)> const&) [1279]
                0.00    0.00       1/1           CQP::Wavefunction<1u> CQP::createWaveByExpression<1u, std::function<std::complex<double> (double)> >(CQP::NumericalGrid<1u, 1u> const&, std::function<std::complex<double> (double)>) [1290]
                0.00    0.00       1/1           CQP::FFTExecutor<1u, 0u>::FFTExecutor(CQP::NumericalGrid<1u, 1u> const&) [1283]
                0.00    0.00       1/1           CQP::FFTExecutor<1u, 0u>::~FFTExecutor() [1284]
-----------------------------------------------
                0.00    0.00       1/1           test_omp() [1282]
[1283]   0.0    0.00    0.00       1         CQP::FFTExecutor<1u, 0u>::FFTExecutor(CQP::NumericalGrid<1u, 1u> const&) [1283]
                0.00    0.00       3/3           CQP::NumericalGrid<1u, 1u>::getCount(int) const [1269]
                0.00    0.00       2/774262      CQP::NumericalGrid<1u, 1u>::getTotalCount() const [1086]
                0.00    0.00       1/1002        CQP::NumericalGrid<1u, 1u>::NumericalGrid(CQP::NumericalGrid<1u, 1u> const&) [1191]
                0.00    0.00       1/1           CQP::NumericalGrid<1u, 1u>::NumericalGrid() [1287]
                0.00    0.00       1/1           CQP::NumericalGrid<1u, 1u>::getOffset(int) const [1298]
                0.00    0.00       1/1           CQP::NumericalGrid<1u, 1u>::getLength(int) const [1297]
                0.00    0.00       1/1           CQP::NumericalGrid<1u, 1u>::NumericalGrid(int (&) [1], double (&) [1], double (&) [1]) [1286]
                0.00    0.00       1/1           CQP::NumericalGrid<1u, 1u>::operator=(CQP::NumericalGrid<1u, 1u> const&) [1289]
-----------------------------------------------
                0.00    0.00       1/1           test_omp() [1282]
[1284]   0.0    0.00    0.00       1         CQP::FFTExecutor<1u, 0u>::~FFTExecutor() [1284]
-----------------------------------------------
                0.00    0.00       1/1           CQP::NumericalGrid<1u, 1u>::NumericalGrid<int, int, int>(int, int, int) [1288]
[1285]   0.0    0.00    0.00       1         CQP::NumericalGrid<1u, 1u>::init(int, double, double) [1285]
-----------------------------------------------
                0.00    0.00       1/1           CQP::FFTExecutor<1u, 0u>::FFTExecutor(CQP::NumericalGrid<1u, 1u> const&) [1283]
[1286]   0.0    0.00    0.00       1         CQP::NumericalGrid<1u, 1u>::NumericalGrid(int (&) [1], double (&) [1], double (&) [1]) [1286]
                0.00    0.00       1/1006        CQP::NumericalGrid<1u, 1u>::update_total_cnt() [1190]
-----------------------------------------------
                0.00    0.00       1/1           CQP::FFTExecutor<1u, 0u>::FFTExecutor(CQP::NumericalGrid<1u, 1u> const&) [1283]
[1287]   0.0    0.00    0.00       1         CQP::NumericalGrid<1u, 1u>::NumericalGrid() [1287]
                0.00    0.00       1/1006        CQP::NumericalGrid<1u, 1u>::update_total_cnt() [1190]
-----------------------------------------------
                0.00    0.00       1/1           test_omp() [1282]
[1288]   0.0    0.00    0.00       1         CQP::NumericalGrid<1u, 1u>::NumericalGrid<int, int, int>(int, int, int) [1288]
                0.00    0.00       1/1           CQP::NumericalGrid<1u, 1u>::init(int, double, double) [1285]
                0.00    0.00       1/1006        CQP::NumericalGrid<1u, 1u>::update_total_cnt() [1190]
-----------------------------------------------
                0.00    0.00       1/1           CQP::FFTExecutor<1u, 0u>::FFTExecutor(CQP::NumericalGrid<1u, 1u> const&) [1283]
[1289]   0.0    0.00    0.00       1         CQP::NumericalGrid<1u, 1u>::operator=(CQP::NumericalGrid<1u, 1u> const&) [1289]
                0.00    0.00       1/1006        CQP::NumericalGrid<1u, 1u>::update_total_cnt() [1190]
-----------------------------------------------
                0.00    0.00       1/1           test_omp() [1282]
[1290]   0.0    0.00    0.00       1         CQP::Wavefunction<1u> CQP::createWaveByExpression<1u, std::function<std::complex<double> (double)> >(CQP::NumericalGrid<1u, 1u> const&, std::function<std::complex<double> (double)>) [1290]
                0.00    0.00       1/2           std::function<std::complex<double> (double)>::function(std::function<std::complex<double> (double)> const&) [1279]
                0.00    0.00       1/1           CQP::create1DWaveByExpression(CQP::NumericalGrid<1u, 1u> const&, std::function<std::complex<double> (double)>) [1291]
                0.00    0.00       1/3           std::function<std::complex<double> (double)>::~function() [1273]
-----------------------------------------------
                0.00    0.00       1/1           CQP::Wavefunction<1u> CQP::createWaveByExpression<1u, std::function<std::complex<double> (double)> >(CQP::NumericalGrid<1u, 1u> const&, std::function<std::complex<double> (double)>) [1290]
[1291]   0.0    0.00    0.00       1         CQP::create1DWaveByExpression(CQP::NumericalGrid<1u, 1u> const&, std::function<std::complex<double> (double)>) [1291]
                0.00    0.00     258/774262      CQP::NumericalGrid<1u, 1u>::getTotalCount() const [1086]
                0.00    0.00     256/256         CQP::NumericalGrid<1u, 1u>::index(int) const [1259]
                0.00    0.00     256/256         CQP::GridPoint<1u>::x() [1254]
                0.00    0.00     256/256         std::function<std::complex<double> (double)>::operator()(double) const [1260]
                0.00    0.00     256/256256      std::vector<std::complex<double>, std::allocator<std::complex<double> > >::operator[](unsigned long) [1147]
                0.00    0.00       1/2001        std::allocator<std::complex<double> >::allocator() [1165]
                0.00    0.00       1/259258      std::complex<double>::complex(double, double) [1141]
                0.00    0.00       1/2001        std::vector<std::complex<double>, std::allocator<std::complex<double> > >::vector(unsigned long, std::complex<double> const&, std::allocator<std::complex<double> > const&) [1182]
                0.00    0.00       1/6003        std::allocator<std::complex<double> >::~allocator() [1153]
                0.00    0.00       1/1001        CQP::Wavefunction<1u>::Wavefunction(CQP::NumericalGrid<1u, 1u> const&, std::vector<std::complex<double>, std::allocator<std::complex<double> > > const&) [1192]
                0.00    0.00       1/2001        std::vector<std::complex<double>, std::allocator<std::complex<double> > >::~vector() [1183]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [1281]
[1292]   0.0    0.00    0.00       1         Eigen::internal::all_t::all_t() [1292]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [1281]
[1293]   0.0    0.00    0.00       1         Eigen::internal::FixedInt<1>::FixedInt() [1293]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [1281]
[1294]   0.0    0.00    0.00       1         Eigen::symbolic::SymbolExpr<Eigen::internal::symbolic_last_tag>::SymbolExpr() [1294]
-----------------------------------------------
                0.00    0.00       1/1           Eigen::symbolic::AddExpr<Eigen::symbolic::SymbolExpr<Eigen::internal::symbolic_last_tag>, Eigen::symbolic::ValueExpr<Eigen::internal::FixedInt<1> > > Eigen::symbolic::BaseExpr<Eigen::symbolic::SymbolExpr<Eigen::internal::symbolic_last_tag> >::operator+<1>(Eigen::internal::FixedInt<1>) const [1301]
[1295]   0.0    0.00    0.00       1         Eigen::symbolic::AddExpr<Eigen::symbolic::SymbolExpr<Eigen::internal::symbolic_last_tag>, Eigen::symbolic::ValueExpr<Eigen::internal::FixedInt<1> > >::AddExpr(Eigen::symbolic::SymbolExpr<Eigen::internal::symbolic_last_tag> const&, Eigen::symbolic::ValueExpr<Eigen::internal::FixedInt<1> > const&) [1295]
-----------------------------------------------
                0.00    0.00       1/1           Eigen::symbolic::AddExpr<Eigen::symbolic::SymbolExpr<Eigen::internal::symbolic_last_tag>, Eigen::symbolic::ValueExpr<Eigen::internal::FixedInt<1> > > Eigen::symbolic::BaseExpr<Eigen::symbolic::SymbolExpr<Eigen::internal::symbolic_last_tag> >::operator+<1>(Eigen::internal::FixedInt<1>) const [1301]
[1296]   0.0    0.00    0.00       1         Eigen::symbolic::ValueExpr<Eigen::internal::FixedInt<1> >::ValueExpr() [1296]
-----------------------------------------------
                0.00    0.00       1/1           CQP::FFTExecutor<1u, 0u>::FFTExecutor(CQP::NumericalGrid<1u, 1u> const&) [1283]
[1297]   0.0    0.00    0.00       1         CQP::NumericalGrid<1u, 1u>::getLength(int) const [1297]
-----------------------------------------------
                0.00    0.00       1/1           CQP::FFTExecutor<1u, 0u>::FFTExecutor(CQP::NumericalGrid<1u, 1u> const&) [1283]
[1298]   0.0    0.00    0.00       1         CQP::NumericalGrid<1u, 1u>::getOffset(int) const [1298]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [1281]
[1299]   0.0    0.00    0.00       1         Eigen::internal::FixedInt<1>::operator()() const [1299]
-----------------------------------------------
                0.00    0.00       1/1           Eigen::symbolic::AddExpr<Eigen::symbolic::SymbolExpr<Eigen::internal::symbolic_last_tag>, Eigen::symbolic::ValueExpr<Eigen::internal::FixedInt<1> > > Eigen::symbolic::BaseExpr<Eigen::symbolic::SymbolExpr<Eigen::internal::symbolic_last_tag> >::operator+<1>(Eigen::internal::FixedInt<1>) const [1301]
[1300]   0.0    0.00    0.00       1         Eigen::symbolic::BaseExpr<Eigen::symbolic::SymbolExpr<Eigen::internal::symbolic_last_tag> >::derived() const [1300]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [1281]
[1301]   0.0    0.00    0.00       1         Eigen::symbolic::AddExpr<Eigen::symbolic::SymbolExpr<Eigen::internal::symbolic_last_tag>, Eigen::symbolic::ValueExpr<Eigen::internal::FixedInt<1> > > Eigen::symbolic::BaseExpr<Eigen::symbolic::SymbolExpr<Eigen::internal::symbolic_last_tag> >::operator+<1>(Eigen::internal::FixedInt<1>) const [1301]
                0.00    0.00       1/1           Eigen::symbolic::ValueExpr<Eigen::internal::FixedInt<1> >::ValueExpr() [1296]
                0.00    0.00       1/1           Eigen::symbolic::BaseExpr<Eigen::symbolic::SymbolExpr<Eigen::internal::symbolic_last_tag> >::derived() const [1300]
                0.00    0.00       1/1           Eigen::symbolic::AddExpr<Eigen::symbolic::SymbolExpr<Eigen::internal::symbolic_last_tag>, Eigen::symbolic::ValueExpr<Eigen::internal::FixedInt<1> > >::AddExpr(Eigen::symbolic::SymbolExpr<Eigen::internal::symbolic_last_tag> const&, Eigen::symbolic::ValueExpr<Eigen::internal::FixedInt<1> > const&) [1295]
-----------------------------------------------
                0.00    0.00       1/1           std::function<std::complex<double> (double)>::function<test_omp()::{lambda(double)#1}, void>(test_omp()::{lambda(double)#1}&&) [1305]
[1302]   0.0    0.00    0.00       1         void std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_init_functor<{lambda(double)#1}>(std::_Any_data&, {lambda(double)#1}&&) [1302]
                0.00    0.00       1/3           test_omp()::{lambda(double)#1}&& std::forward<test_omp()::{lambda(double)#1}>(std::remove_reference<test_omp()::{lambda(double)#1}>::type&) [1275]
                0.00    0.00       1/1           void std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_create<{lambda(double)#1}>(std::_Any_data&, {lambda(double)#1}&&, std::integral_constant<bool, true>) [1304]
-----------------------------------------------
                0.00    0.00       1/1           std::function<std::complex<double> (double)>::function<test_omp()::{lambda(double)#1}, void>(test_omp()::{lambda(double)#1}&&) [1305]
[1303]   0.0    0.00    0.00       1         bool std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_not_empty_function<{lambda(double)#1}>({lambda(double)#1} const&) [1303]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_init_functor<{lambda(double)#1}>(std::_Any_data&, {lambda(double)#1}&&) [1302]
[1304]   0.0    0.00    0.00       1         void std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_create<{lambda(double)#1}>(std::_Any_data&, {lambda(double)#1}&&, std::integral_constant<bool, true>) [1304]
                0.00    0.00       1/3           test_omp()::{lambda(double)#1}&& std::forward<test_omp()::{lambda(double)#1}>(std::remove_reference<test_omp()::{lambda(double)#1}>::type&) [1275]
                0.00    0.00       1/6           std::_Any_data::_M_access() [1265]
                0.00    0.00       1/512259      operator new(unsigned long, void*) [1099]
-----------------------------------------------
                0.00    0.00       1/1           test_omp() [1282]
[1305]   0.0    0.00    0.00       1         std::function<std::complex<double> (double)>::function<test_omp()::{lambda(double)#1}, void>(test_omp()::{lambda(double)#1}&&) [1305]
                0.00    0.00       1/3           std::_Function_base::_Function_base() [1271]
                0.00    0.00       1/1           bool std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_not_empty_function<{lambda(double)#1}>({lambda(double)#1} const&) [1303]
                0.00    0.00       1/3           test_omp()::{lambda(double)#1}&& std::forward<test_omp()::{lambda(double)#1}>(std::remove_reference<test_omp()::{lambda(double)#1}>::type&) [1275]
                0.00    0.00       1/1           void std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_init_functor<{lambda(double)#1}>(std::_Any_data&, {lambda(double)#1}&&) [1302]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2016 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

 [1280] _GLOBAL__sub_I__Z7test_1dv (main.cpp) [1229] Eigen::DenseBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::DenseBase() [1119] std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data()
 [1281] __static_initialization_and_destruction_0(int, int) (main.cpp) [1142] Eigen::EigenBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::derived() [1085] std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
 [1282] test_omp()          [1161] __gnu_cxx::new_allocator<std::complex<double> >::deallocate(std::complex<double>*, unsigned long) [1120] std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
 [1188] bool (anonymous namespace)::isApproxEqual<double>(double const&, double const&) (Util.hpp) [1162] __gnu_cxx::new_allocator<std::complex<double> >::allocate(unsigned long, void const*) [1121] std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
 [1243] bool (anonymous namespace)::isApproxEqual<int>(int const&, int const&) (Util.hpp) [1154] __gnu_cxx::new_allocator<std::complex<double> >::new_allocator(__gnu_cxx::new_allocator<std::complex<double> > const&) [1270] std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>) (std_function.h)
 [1244] CQP::FFTExecutor<1u, 0u>::execute() [1163] __gnu_cxx::new_allocator<std::complex<double> >::new_allocator() [1266] std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}> const&, std::_Manager_operation) (std_function.h)
 [1245] CQP::FFTExecutor<1u, 0u>::inputWave(CQP::Wavefunction<1u> const&) [1152] __gnu_cxx::new_allocator<std::complex<double> >::~new_allocator() [1252] std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_get_pointer(std::_Any_data const&) (std_function.h)
 [1283] CQP::FFTExecutor<1u, 0u>::FFTExecutor(CQP::NumericalGrid<1u, 1u> const&) [1103] __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [1277] void std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_init_functor<{lambda(double)#1} const&>(std::_Any_data&, {lambda(double)#1} const&) (std_function.h)
 [1284] CQP::FFTExecutor<1u, 0u>::~FFTExecutor() [1104] __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [1302] void std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_init_functor<{lambda(double)#1}>(std::_Any_data&, {lambda(double)#1}&&) (std_function.h)
 [1192] CQP::Wavefunction<1u>::Wavefunction(CQP::NumericalGrid<1u, 1u> const&, std::vector<std::complex<double>, std::allocator<std::complex<double> > > const&) [1105] __gnu_cxx::new_allocator<int>::new_allocator() [1303] bool std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_not_empty_function<{lambda(double)#1}>({lambda(double)#1} const&) (std_function.h)
 [1193] CQP::Wavefunction<1u>::~Wavefunction() [1082] __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&) [1278] void std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_create<{lambda(double)#1} const&>(std::_Any_data&, {lambda(double)#1} const&, std::integral_constant<bool, true>) (std_function.h)
 [1190] CQP::NumericalGrid<1u, 1u>::update_total_cnt() [1072] __gnu_cxx::new_allocator<int>::~new_allocator() [1304] void std::_Function_base::_Base_manager<test_omp()::{lambda(double)#1}>::_M_create<{lambda(double)#1}>(std::_Any_data&, {lambda(double)#1}&&, std::integral_constant<bool, true>) (std_function.h)
 [1285] CQP::NumericalGrid<1u, 1u>::init(int, double, double) [1106] CQP::Wavefunction<1u>::getValueByIndex(int) const [1271] std::_Function_base::_Function_base()
 [1286] CQP::NumericalGrid<1u, 1u>::NumericalGrid(int (&) [1], double (&) [1], double (&) [1]) [1247] CQP::Wavefunction<1u>::getGrid() const [1272] std::_Function_base::~_Function_base()
 [1287] CQP::NumericalGrid<1u, 1u>::NumericalGrid() [1257] CQP::NumericalGrid<1u, 1u>::index_agent(int) const [1175] std::allocator_traits<std::allocator<std::complex<double> > >::deallocate(std::allocator<std::complex<double> >&, std::complex<double>*, unsigned long)
 [1191] CQP::NumericalGrid<1u, 1u>::NumericalGrid(CQP::NumericalGrid<1u, 1u> const&) [1086] CQP::NumericalGrid<1u, 1u>::getTotalCount() const [1176] std::allocator_traits<std::allocator<std::complex<double> > >::allocate(std::allocator<std::complex<double> >&, unsigned long)
 [1288] CQP::NumericalGrid<1u, 1u>::NumericalGrid<int, int, int>(int, int, int) [1258] CQP::NumericalGrid<1u, 1u>::get_value_by_index(int, int) const [1177] std::allocator_traits<std::allocator<std::complex<double> > >::max_size(std::allocator<std::complex<double> > const&)
 [1289] CQP::NumericalGrid<1u, 1u>::operator=(CQP::NumericalGrid<1u, 1u> const&) [1259] CQP::NumericalGrid<1u, 1u>::index(int) const [1122] std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long)
 [1290] CQP::Wavefunction<1u> CQP::createWaveByExpression<1u, std::function<std::complex<double> (double)> >(CQP::NumericalGrid<1u, 1u> const&, std::function<std::complex<double> (double)>) [1107] CQP::NumericalGrid<1u, 1u>::expand(int) const [1123] std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long)
 [1291] CQP::create1DWaveByExpression(CQP::NumericalGrid<1u, 1u> const&, std::function<std::complex<double> (double)>) [1097] CQP::NumericalGrid<1u, 1u>::shrink(int (&) [1]) const [1124] std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
 [1254] CQP::GridPoint<1u>::x() [1269] CQP::NumericalGrid<1u, 1u>::getCount(int) const [1267] std::_Function_handler<std::complex<double> (double), test_omp()::{lambda(double)#1}>::_M_manager(std::_Any_data&, std::_Function_handler<std::complex<double> (double), test_omp()::{lambda(double)#1}> const&, std::_Manager_operation) (std_function.h)
 [1255] CQP::GridPoint<1u>::get(int) [1297] CQP::NumericalGrid<1u, 1u>::getLength(int) const [1261] std::_Function_handler<std::complex<double> (double), test_omp()::{lambda(double)#1}>::_M_invoke(std::_Any_data const&, double&&) (std_function.h)
 [1256] CQP::GridPoint<1u>::GridPoint() [1298] CQP::NumericalGrid<1u, 1u>::getOffset(int) const [1178] std::complex<double>* std::__uninitialized_fill_n<false>::__uninit_fill_n<std::complex<double>*, unsigned long, std::complex<double> >(std::complex<double>*, unsigned long, std::complex<double> const&)
 [1246] CQP::operator==(CQP::NumericalGrid<1u, 1u> const&, CQP::NumericalGrid<1u, 1u> const&) [1095] Eigen::DenseStorage<std::complex<double>, -1, -1, 1, 0>::data() const [1125] int* std::__uninitialized_fill_n<true>::__uninit_fill_n<int*, unsigned long, int>(int*, unsigned long, int const&)
 [1194] Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >::MatrixBase() [1075] Eigen::DenseStorage<std::complex<double>, -1, -1, 1, 0>::rows() const [1179] std::vector<std::complex<double>, std::allocator<std::complex<double> > >::_S_max_size(std::allocator<std::complex<double> > const&)
 [1195] Eigen::MatrixBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::MatrixBase() [1230] Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::cols() const [1180] std::vector<std::complex<double>, std::allocator<std::complex<double> > >::_S_check_init_len(unsigned long, std::allocator<std::complex<double> > const&)
 [1077] Eigen::DenseStorage<std::complex<double>, -1, -1, 1, 0>::cols() [1231] Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::rows() const [1181] std::vector<std::complex<double>, std::allocator<std::complex<double> > >::_M_fill_initialize(unsigned long, std::complex<double> const&)
 [1196] Eigen::DenseStorage<std::complex<double>, -1, -1, 1, 0>::data() [1232] Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::functor() const [1182] std::vector<std::complex<double>, std::allocator<std::complex<double> > >::vector(unsigned long, std::complex<double> const&, std::allocator<std::complex<double> > const&)
 [1197] Eigen::DenseStorage<std::complex<double>, -1, -1, 1, 0>::resize(long, long, long) [1108] Eigen::DenseCoeffsBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, 0>::coeff(long) const (DenseCoeffsBase.h) [1183] std::vector<std::complex<double>, std::allocator<std::complex<double> > >::~vector()
 [1198] Eigen::DenseStorage<std::complex<double>, -1, -1, 1, 0>::DenseStorage() [1109] Eigen::DenseCoeffsBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, 0>::operator()(long) const (DenseCoeffsBase.h) [1147] std::vector<std::complex<double>, std::allocator<std::complex<double> > >::operator[](unsigned long)
 [1199] Eigen::DenseStorage<std::complex<double>, -1, -1, 1, 0>::~DenseStorage() [1078] Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::cols() const [1126] std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&)
 [1200] Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::CwiseNullaryOp(long, long, Eigen::internal::scalar_constant_op<std::complex<double> > const&) [1096] Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::data() const [1127] std::vector<int, std::allocator<int> >::_S_check_init_len(unsigned long, std::allocator<int> const&)
 [1143] Eigen::DenseCoeffsBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, 1>::coeffRef(long) [1076] Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::rows() const [1128] std::vector<int, std::allocator<int> >::_M_fill_initialize(unsigned long, int const&)
 [1144] Eigen::DenseCoeffsBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, 1>::operator()(long) [1233] Eigen::internal::scalar_constant_op<std::complex<double> >::operator()() const [1129] std::vector<int, std::allocator<int> >::vector(unsigned long, int const&, std::allocator<int> const&)
 [1201] Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>& Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::_set_noalias<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >(Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > > const&) [1234] Eigen::internal::variable_if_dynamic<long, -1>::value() const [1130] std::vector<int, std::allocator<int> >::~vector()
 [1202] Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::_check_template_params() [1299] Eigen::internal::FixedInt<1>::operator()() const [1074] std::vector<int, std::allocator<int> >::operator[](unsigned long)
 [1203] Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::data() [1110] Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >::coeff(long) const [1141] std::complex<double>::complex(double, double)
 [1204] void Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::_init1<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >(Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > > const&) [1300] Eigen::symbolic::BaseExpr<Eigen::symbolic::SymbolExpr<Eigen::internal::symbolic_last_tag> >::derived() const [1150] std::complex<double>::operator/=(double)
 [1205] Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::resize(long, long) [1301] Eigen::symbolic::AddExpr<Eigen::symbolic::SymbolExpr<Eigen::internal::symbolic_last_tag>, Eigen::symbolic::ValueExpr<Eigen::internal::FixedInt<1> > > Eigen::symbolic::BaseExpr<Eigen::symbolic::SymbolExpr<Eigen::internal::symbolic_last_tag> >::operator+<1>(Eigen::internal::FixedInt<1>) const [1305] std::function<std::complex<double> (double)>::function<test_omp()::{lambda(double)#1}, void>(test_omp()::{lambda(double)#1}&&) (std_function.h)
 [1206] Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::PlainObjectBase() [1235] Eigen::EigenBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >::derived() const [1279] std::function<std::complex<double> (double)>::function(std::function<std::complex<double> (double)> const&)
 [1207] Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::~PlainObjectBase() [1079] Eigen::EigenBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::cols() const [1273] std::function<std::complex<double> (double)>::~function()
 [1208] Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::Matrix<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >(Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&) [1080] Eigen::EigenBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::rows() const [1265] std::_Any_data::_M_access()
 [1209] Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::~Matrix() [1081] Eigen::EigenBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::size() const [1274] test_omp()::{lambda(double)#1}& std::_Any_data::_M_access<test_omp()::{lambda(double)#1}>() (std_function.h)
 [1210] Eigen::internal::Assignment<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >, Eigen::internal::assign_op<std::complex<double>, std::complex<double> >, Eigen::internal::Dense2Dense, void>::run(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&, Eigen::internal::assign_op<std::complex<double>, std::complex<double> > const&) [1071] Eigen::EigenBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::derived() const [1100] void std::_Construct<std::complex<double>, std::complex<double> const&>(std::complex<double>*, std::complex<double> const&)
 [1158] Eigen::internal::aligned_free(void*) [1155] __gnu_cxx::new_allocator<std::complex<double> >::_M_max_size() const [1237] std::complex<double>* std::__fill_n_a<std::complex<double>*, long, std::complex<double> >(std::complex<double>*, long, std::complex<double> const&, std::random_access_iterator_tag)
 [1211] Eigen::internal::aligned_malloc(unsigned long) [1164] __gnu_cxx::new_allocator<std::complex<double> >::max_size() const [1131] int* std::__fill_n_a<int*, unsigned long, int>(int*, unsigned long, int const&, std::random_access_iterator_tag)
 [1087] Eigen::internal::evaluator_base<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::evaluator_base() [1083] __gnu_cxx::new_allocator<int>::_M_max_size() const [1262] std::enable_if<is_invocable_r_v<std::complex<double>, test_omp()::{lambda(double)#1}&, double>, std::enable_if>::type std::__invoke_r<std::complex<double>, test_omp()::{lambda(double)#1}&, double>(std::complex<double>&&, (test_omp()::{lambda(double)#1}&)...) (invoke.h)
 [1088] Eigen::internal::evaluator_base<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::~evaluator_base() [1111] __gnu_cxx::new_allocator<int>::max_size() const [1253] test_omp()::{lambda(double)#1} const* std::__addressof<test_omp()::{lambda(double)#1} const>(test_omp()::{lambda(double)#1} const&) (move.h)
 [1212] void Eigen::internal::resize_if_allowed<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >, std::complex<double>, std::complex<double> >(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&, Eigen::internal::assign_op<std::complex<double>, std::complex<double> > const&) [1249] std::_Function_base::_M_empty() const [1101] std::complex<double>* std::__addressof<std::complex<double> >(std::complex<double>&)
 [1213] void Eigen::internal::check_for_aliasing<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> const&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&) [1236] std::vector<std::complex<double>, std::allocator<std::complex<double> > >::size() const [1263] double std::__invoke_impl<double, test_omp()::{lambda(double)#1}&, double>(std::__invoke_other, test_omp()::{lambda(double)#1}&, double&&) (invoke.h)
 [1214] Eigen::internal::scalar_constant_op<std::complex<double> >::scalar_constant_op(Eigen::internal::scalar_constant_op<std::complex<double> > const&) [1146] std::vector<std::complex<double>, std::allocator<std::complex<double> > >::operator[](unsigned long) const [1238] std::__size_to_integer(long)
 [1215] Eigen::internal::scalar_constant_op<std::complex<double> >::scalar_constant_op(std::complex<double> const&) [1148] std::complex<double>::imag[abi:cxx11]() const [1132] std::__size_to_integer(unsigned long)
 [1216] Eigen::internal::variable_if_dynamic<long, 1>::value() [1149] std::complex<double>::real[abi:cxx11]() const [1239] std::iterator_traits<std::complex<double>*>::iterator_category std::__iterator_category<std::complex<double>*>(std::complex<double>* const&)
 [1217] Eigen::internal::variable_if_dynamic<long, 1>::variable_if_dynamic(long) [1260] std::function<std::complex<double> (double)>::operator()(double) const [1133] std::iterator_traits<int*>::iterator_category std::__iterator_category<int*>(int* const&)
 [1218] Eigen::internal::variable_if_dynamic<long, -1>::variable_if_dynamic(long) [1276] std::function<std::complex<double> (double)>::operator bool() const [1184] std::complex<double>* std::uninitialized_fill_n<std::complex<double>*, unsigned long, std::complex<double> >(std::complex<double>*, unsigned long, std::complex<double> const&)
 [1089] void Eigen::internal::ignore_unused_variable<long>(long const&) [1250] std::_Any_data::_M_access() const [1134] int* std::uninitialized_fill_n<int*, unsigned long, int>(int*, unsigned long, int const&)
 [1219] void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >, Eigen::internal::assign_op<std::complex<double>, std::complex<double> > >(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&, Eigen::internal::assign_op<std::complex<double>, std::complex<double> > const&) [1251] test_omp()::{lambda(double)#1} const& std::_Any_data::_M_access<test_omp()::{lambda(double)#1}>() const (std_function.h) [1185] std::complex<double>* std::__uninitialized_fill_n_a<std::complex<double>*, unsigned long, std::complex<double>, std::complex<double> >(std::complex<double>*, unsigned long, std::complex<double> const&, std::allocator<std::complex<double> >&)
 [1159] void Eigen::internal::conditional_aligned_free<true>(void*) [1156] std::allocator<std::complex<double> >::allocator(std::allocator<std::complex<double> > const&) [1135] int* std::__uninitialized_fill_n_a<int*, unsigned long, int, int>(int*, unsigned long, int const&, std::allocator<int>&)
 [1220] void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::Scalar>, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&, Eigen::internal::assign_op<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::Scalar, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1>::Scalar> const&) [1165] std::allocator<std::complex<double> >::allocator() [1098] unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&)
 [1221] void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long) [1153] std::allocator<std::complex<double> >::~allocator() [1240] std::complex<double>* std::fill_n<std::complex<double>*, long, std::complex<double> >(std::complex<double>*, long, std::complex<double> const&)
 [1222] Eigen::internal::check_that_malloc_is_allowed() [1084] std::allocator<int>::allocator(std::allocator<int> const&) [1136] int* std::fill_n<int*, unsigned long, int>(int*, unsigned long, int const&)
 [1223] std::complex<double>* Eigen::internal::conditional_aligned_new_auto<std::complex<double>, true>(unsigned long) [1112] std::allocator<int>::allocator() [1102] std::complex<double> const& std::forward<std::complex<double> const&>(std::remove_reference<std::complex<double> const&>::type&)
 [1090] Eigen::internal::plainobjectbase_evaluator_data<std::complex<double>, 0>::plainobjectbase_evaluator_data(std::complex<double> const*, long) [1073] std::allocator<int>::~allocator() [1268] test_omp()::{lambda(double)#1} const& std::forward<test_omp()::{lambda(double)#1} const&>(std::remove_reference<test_omp()::{lambda(double)#1} const&>::type&) (move.h)
 [1160] void Eigen::internal::conditional_aligned_delete_auto<std::complex<double>, true>(std::complex<double>*, unsigned long) [1166] void std::_Destroy_aux<true>::__destroy<std::complex<double>*>(std::complex<double>*, std::complex<double>*) [1248] test_omp()::{lambda(double)#1}& std::forward<test_omp()::{lambda(double)#1}&>(std::remove_reference<test_omp()::{lambda(double)#1}&>::type&) (move.h)
 [1292] Eigen::internal::all_t::all_t() [1113] void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [1275] test_omp()::{lambda(double)#1}&& std::forward<test_omp()::{lambda(double)#1}>(std::remove_reference<test_omp()::{lambda(double)#1}>::type&) (move.h)
 [1293] Eigen::internal::FixedInt<1>::FixedInt() [1167] std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_M_allocate(unsigned long) [1189] double&& std::forward<double>(std::remove_reference<double>::type&)
 [1224] Eigen::internal::assign_op<std::complex<double>, std::complex<double> >::assign_op() [1168] std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_Vector_impl::_Vector_impl(std::allocator<std::complex<double> > const&) [1186] void std::_Destroy<std::complex<double>*>(std::complex<double>*, std::complex<double>*)
 [1145] Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >::coeffRef(long) [1169] std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_Vector_impl::~_Vector_impl() [1187] void std::_Destroy<std::complex<double>*, std::complex<double> >(std::complex<double>*, std::complex<double>*, std::allocator<std::complex<double> >&)
 [1091] Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >::evaluator(Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const&) [1170] std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_M_deallocate(std::complex<double>*, unsigned long) [1137] void std::_Destroy<int*>(int*, int*)
 [1092] Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >::~evaluator() [1171] std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_M_create_storage(unsigned long) [1138] void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
 [1093] Eigen::internal::evaluator<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::evaluator(Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> const&) [1172] std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_Vector_impl_data::_Vector_impl_data() [1241] void std::__fill_a<std::complex<double>*, std::complex<double> >(std::complex<double>*, std::complex<double>*, std::complex<double> const&)
 [1094] Eigen::internal::evaluator<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::~evaluator() [1157] std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_M_get_Tp_allocator() [1139] void std::__fill_a<int*, int>(int*, int*, int const&)
 [1294] Eigen::symbolic::SymbolExpr<Eigen::internal::symbolic_last_tag>::SymbolExpr() [1173] std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::_Vector_base(unsigned long, std::allocator<std::complex<double> > const&) [1242] __gnu_cxx::__enable_if<!std::__is_scalar<std::complex<double> >::__value, void>::__type std::__fill_a1<std::complex<double>*, std::complex<double> >(std::complex<double>*, std::complex<double>*, std::complex<double> const&)
 [1295] Eigen::symbolic::AddExpr<Eigen::symbolic::SymbolExpr<Eigen::internal::symbolic_last_tag>, Eigen::symbolic::ValueExpr<Eigen::internal::FixedInt<1> > >::AddExpr(Eigen::symbolic::SymbolExpr<Eigen::internal::symbolic_last_tag> const&, Eigen::symbolic::ValueExpr<Eigen::internal::FixedInt<1> > const&) [1174] std::_Vector_base<std::complex<double>, std::allocator<std::complex<double> > >::~_Vector_base() [1140] __gnu_cxx::__enable_if<std::__is_scalar<int>::__value, void>::__type std::__fill_a1<int*, int>(int*, int*, int const&)
 [1296] Eigen::symbolic::ValueExpr<Eigen::internal::FixedInt<1> >::ValueExpr() [1114] std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [1151] std::complex<double> std::operator/<double>(std::complex<double> const&, double const&)
 [1225] Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > >::DenseBase() [1115] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&) [1264] test_omp()::{lambda(double)#1}::operator()(double) const (main.cpp)
 [1226] Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> > const Eigen::DenseBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::NullaryExpr<Eigen::internal::scalar_constant_op<std::complex<double> > >(long, Eigen::internal::scalar_constant_op<std::complex<double> > const&) (CwiseNullaryOp.h) [1116] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [1099] operator new(unsigned long, void*)
 [1227] Eigen::DenseBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::Zero(long) (CwiseNullaryOp.h) [1117] std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
 [1228] Eigen::DenseBase<Eigen::Matrix<std::complex<double>, -1, 1, 0, -1, 1> >::Constant(long, std::complex<double> const&) (CwiseNullaryOp.h) [1118] std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
